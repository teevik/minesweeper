{"version":3,"sources":["types/SquareState.ts","types/index.ts","models/SquareModel.ts","stores/gameStore.ts","components/App.tsx","components/Button.tsx","components/Dropdown.tsx","components/Game.tsx","components/Header.tsx","components/Label.tsx","components/Minefield.tsx","icons/CloseIcon.tsx","icons/FlagIcon.tsx","components/Square.tsx","components/StartScreen.tsx","hooks/useDropdown.ts","components/Topbar.tsx","index.tsx"],"names":["SquareState","__webpack_require__","d","__webpack_exports__","_Dimensions__WEBPACK_IMPORTED_MODULE_0__","o","_DropdownEntry__WEBPACK_IMPORTED_MODULE_1__","_SquareState__WEBPACK_IMPORTED_MODULE_2__","SquareModel","_class","hasBomb","Object","classCallCheck","this","initializerDefineProperty","_descriptor","_descriptor2","createClass","key","value","neighbors","state","opened","willExplode","exploded","neighborsWithBomb","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","neighbor","closed","onOpen","err","return","isFlagged","get","filter","length","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","computed","gameStore","GameStore","gameStore_descriptor","gameStore_descriptor2","width","height","minefield","i","row","push","j","square","Math","random","k","l","neighborSquare","setNeighbors","gameRunning","dimensions","flat","some","App","observer","props","react","Wrapper","Header_Header","Game_Game","Topbar","Minefield","StartScreen_StartScreen","GlobalStyle","styled","div","_templateObject","createGlobalStyle","_templateObject2","Button","button","Button_templateObject","Dropdown","entries","selectedEntry","onEntryChange","menuItems","map","entry","MenuItem","content","Dropdown_Wrapper","onSelection","newEntry","find","MenuButton","tag","Menu","AriaMenubutton","Dropdown_templateObject","Dropdown_templateObject2","withComponent","Game","Game_Wrapper","children","main","Game_templateObject","Header","Header_Wrapper","Title","header","Header_templateObject","h1","Header_templateObject2","Label","label","Label_templateObject","mineHasExploded","gameIsOver","renderedMinefield","id","Square","squareModel","Minefield_Wrapper","Minefield_templateObject","CloseIcon","CloseIcon_Wrapper","xmlns","viewBox","transform","Line","x1","y2","x2","svg","CloseIcon_templateObject","line","CloseIcon_templateObject2","FlagIcon","FlagIcon_Wrapper","Flag","Pole","y1","FlagIcon_templateObject","path","FlagIcon_templateObject2","_templateObject3","Square_Wrapper","onClick","event","preventDefault","onContextMenu","toggleFlag","FlagIcon_FlagIcon","Square_templateObject","_ref","_ref2","StartScreen","gameModeDropdown","_useState","useState","_useState2","slicedToArray","setSelectedEntry","useDropdown","StartScreen_Wrapper","Dropdown_Dropdown","Hr","setDimensions","beginner","advanced","expert","startGame","StartScreen_templateObject","hr","StartScreen_templateObject2","bombsLeft","bombAmount","flaggedAmount","Topbar_Wrapper","BombsLeft","BombsLeftImportant","StopGameButton","stopGame","CloseIcon_CloseIcon","Topbar_templateObject","p","Topbar_templateObject2","span","Topbar_templateObject3","_templateObject4","configure","enforceActions","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.df6ac697.chunk.js","sourcesContent":["export enum SquareState {\r\n  opened,\r\n  closed,\r\n  exploded\r\n}\r\n","export * from \"./Dimensions\"\nexport * from \"./DropdownEntry\"\nexport * from \"./SquareState\"\n","import { action, computed, observable } from \"mobx\"\r\nimport { SquareState } from \"types\"\r\n\r\nexport class SquareModel {\r\n  public readonly hasBomb: boolean\r\n  @observable public isFlagged = false\r\n  @observable public state = SquareState.closed\r\n\r\n  private neighbors!: SquareModel[]\r\n\r\n  constructor(hasBomb: boolean) {\r\n    this.hasBomb = hasBomb\r\n  }\r\n\r\n  public setNeighbors(neighbors: SquareModel[]) {\r\n    this.neighbors = neighbors\r\n  }\r\n\r\n  @action\r\n  public onOpen() {\r\n    if (this.state === SquareState.opened) return\r\n\r\n    const willExplode = this.hasBomb\r\n    this.state = willExplode ? SquareState.exploded : SquareState.opened\r\n\r\n    if (!willExplode && this.neighborsWithBomb === 0) {\r\n      for (const neighbor of this.neighbors) {\r\n        if (neighbor.state === SquareState.closed) neighbor.onOpen()\r\n      }\r\n    }\r\n  }\r\n\r\n  @action\r\n  public toggleFlag() {\r\n    this.isFlagged = !this.isFlagged\r\n  }\r\n\r\n  @computed\r\n  public get neighborsWithBomb() {\r\n    const neighbors = this.neighbors.filter(neighbor => neighbor.hasBomb)\r\n\r\n    return neighbors.length\r\n  }\r\n}\r\n","import { action, computed, observable } from \"mobx\"\r\nimport { SquareModel } from \"models\"\r\nimport { Dimensions, SquareState } from \"types\"\r\n\r\nclass GameStore {\r\n  @observable\r\n  public gameRunning = false\r\n  @observable\r\n  public minefield: SquareModel[][] = []\r\n\r\n  public width = 18\r\n  public height = 9\r\n\r\n  constructor() {}\r\n\r\n  @action\r\n  public startGame() {\r\n    const minefield: SquareModel[][] = []\r\n\r\n    for (let i = 0; i < this.height; i++) {\r\n      const row: SquareModel[] = []\r\n      minefield.push(row)\r\n\r\n      for (let j = 0; j < this.width; j++) {\r\n        const square = new SquareModel(Math.random() >= 0.9)\r\n        row.push(square)\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.height; i++) {\r\n      const row = minefield[i]\r\n      for (let j = 0; j < this.width; j++) {\r\n        const square = row[j]\r\n\r\n        const neighbors: SquareModel[] = []\r\n\r\n        for (let k = -1; k < 2; k++) {\r\n          const row = minefield[i + k]\r\n          if (!row) continue\r\n\r\n          for (let l = -1; l < 2; l++) {\r\n            const neighborSquare = row[j + l]\r\n            if (neighborSquare === square) continue\r\n            if (neighborSquare) neighbors.push(neighborSquare)\r\n          }\r\n        }\r\n\r\n        square.setNeighbors(neighbors)\r\n      }\r\n    }\r\n\r\n    this.minefield = minefield\r\n    this.gameRunning = true\r\n  }\r\n\r\n  public setDimensions(dimensions: Dimensions) {\r\n    this.width = dimensions.width\r\n    this.height = dimensions.height\r\n  }\r\n\r\n  @action\r\n  public stopGame() {\r\n    this.minefield = []\r\n    this.gameRunning = false\r\n  }\r\n\r\n  @computed\r\n  public get mineHasExploded() {\r\n    return this.minefield\r\n      .flat()\r\n      .some(square => square.state === SquareState.exploded)\r\n  }\r\n\r\n  @computed\r\n  public get bombAmount() {\r\n    return this.minefield.flat().filter(square => square.hasBomb).length\r\n  }\r\n\r\n  @computed\r\n  public get flaggedAmount() {\r\n    return this.minefield.flat().filter(square => square.isFlagged).length\r\n  }\r\n}\r\n\r\nexport const gameStore = new GameStore()\r\n","import { Game, Header, Minefield, StartScreen, Topbar } from \"components\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport { gameStore } from \"stores\"\r\nimport styled, { createGlobalStyle } from \"styled-components\"\r\n\r\nconst renderStartScreen = () => <StartScreen />\r\n\r\nconst renderGame = () => (\r\n  <Game>\r\n    <Topbar />\r\n    <Minefield />\r\n  </Game>\r\n)\r\n\r\nexport const App: React.FC = observer(props => {\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Header />\r\n        {gameStore.gameRunning ? renderGame() : renderStartScreen()}\r\n      </Wrapper>\r\n      <GlobalStyle />\r\n    </>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: inherit;\r\n  }\r\n  \r\n  body {\r\n    background-color: #0B0C20;\r\n    font-family: Montserrat, sans-serif;\r\n  }\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Button = styled.button`\r\n  border: none;\r\n  padding: 10px 48px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: rgba(89, 96, 228, 0.73);\r\n  background-color: #0b0c1e;\r\n  outline: none !important;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #0e1028;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #0c0d22;\r\n  }\r\n`\r\n","import { Button } from \"components\"\r\nimport { action } from \"mobx\"\r\nimport { useObservable } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport { useState } from \"react\"\r\nimport * as AriaMenubutton from \"react-aria-menubutton\"\r\nimport styled from \"styled-components\"\r\nimport { DropdownEntry } from \"types\"\r\n\r\ninterface DropdownProps {\r\n  entries: DropdownEntry[]\r\n  selectedEntry: DropdownEntry\r\n  onEntryChange: (entry: DropdownEntry) => void\r\n}\r\n\r\nexport const Dropdown: React.FC<DropdownProps> = props => {\r\n  const { entries, selectedEntry, onEntryChange } = props\r\n\r\n  const handleSelection = (value: any) => {\r\n    const newEntry = entries.find(entry => entry.value === value)!\r\n    onEntryChange(newEntry)\r\n  }\r\n\r\n  const menuItems = entries.map(entry => {\r\n    if (entry.value === selectedEntry.value) return null\r\n\r\n    return (\r\n      <MenuItem key={entry.value} value={entry.value}>\r\n        {entry.content}\r\n      </MenuItem>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Wrapper onSelection={handleSelection}>\r\n        <MenuButton tag=\"button\">{selectedEntry.content}</MenuButton>\r\n        <Menu>{menuItems}</Menu>\r\n      </Wrapper>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled(AriaMenubutton.Wrapper)`\r\n  position: relative;\r\n`\r\n\r\nconst Menu = styled(AriaMenubutton.Menu)`\r\n  position: absolute;\r\n  top: 100%;\r\n`\r\n\r\nconst MenuItem = Button.withComponent(AriaMenubutton.MenuItem)\r\n\r\nconst MenuButton = Button.withComponent(AriaMenubutton.Button)\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const Game: React.FC = props => {\r\n  return <Wrapper>{props.children}</Wrapper>\r\n}\r\n\r\nconst Wrapper = styled.main`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin: auto;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const Header: React.FC = props => {\r\n  return (\r\n    <Wrapper>\r\n      <Title>Minesweeper</Title>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.header`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 16px;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-weight: 500;\r\n  font-size: 40px;\r\n  color: #5960e4;\r\n  opacity: 0.72;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Label = styled.label`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  color: #5960e4;\r\n  margin-bottom: 4px;\r\n`\r\n","import { Square } from \"components\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport { gameStore } from \"stores\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const Minefield: React.FC = observer(props => {\r\n  const { minefield, mineHasExploded, width, height } = gameStore\r\n  const gameIsOver = mineHasExploded\r\n\r\n  const renderedMinefield = minefield\r\n    .flat()\r\n    .map((square, id) => <Square key={id} squareModel={square} />)\r\n\r\n  return (\r\n    <Wrapper width={width} height={height} gameIsOver={gameIsOver}>\r\n      {renderedMinefield}\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div<{\r\n  width: number\r\n  height: number\r\n  gameIsOver: boolean\r\n}>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${props => props.width}, 30px);\r\n  grid-template-rows: repeat(${props => props.height}, 30px);\r\n  grid-gap: 1px;\r\n  pointer-events: ${props => (props.gameIsOver ? \"none\" : \"auto\")};\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const CloseIcon: React.FC = props => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 29.829 29.828\">\r\n      <g id=\"x\" transform=\"translate(-4.586 -4.586)\">\r\n        <Line x1=\"27\" y2=\"27\" transform=\"translate(6 6)\" />\r\n        <Line x2=\"27\" y2=\"27\" transform=\"translate(6 6)\" />\r\n      </g>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  opacity: 0.83;\r\n  width: 27px;\r\n  height: 27px;\r\n`\r\n\r\nconst Line = styled.line`\r\n  fill: none;\r\n  stroke: #5258d4;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const FlagIcon: React.FC = props => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 22\">\r\n      <g transform=\"translate(-3 -1)\">\r\n        <Flag d=\"M4,15s1-1,4-1,5,2,8,2,4-1,4-1V3s-1,1-4,1S11,2,8,2,4,3,4,3Z\" />\r\n        <Pole y1=\"7\" transform=\"translate(4 15)\" />\r\n      </g>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  width: 16px;\r\n`\r\n\r\nconst Flag = styled.path`\r\n  fill: #5258d4;\r\n  stroke: #1f2356;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n\r\nconst Pole = styled.line`\r\n  fill: none;\r\n  stroke: #1f2356;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import { FlagIcon } from \"icons\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport { SquareModel } from \"models\"\r\nimport * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { SquareState } from \"types\"\r\n\r\ninterface SquareProps {\r\n  squareModel: SquareModel\r\n}\r\n\r\nexport const Square: React.FC<SquareProps> = observer(props => {\r\n  const { squareModel } = props\r\n\r\n  const onLeftClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault()\r\n    if (squareModel.isFlagged) return\r\n\r\n    squareModel.onOpen()\r\n  }\r\n\r\n  const onRightClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault()\r\n    if (squareModel.state !== SquareState.closed) return\r\n\r\n    squareModel.toggleFlag()\r\n  }\r\n\r\n  return (\r\n    <Wrapper\r\n      state={squareModel.state}\r\n      isFlagged={squareModel.isFlagged}\r\n      onClick={onLeftClick}\r\n      onContextMenu={onRightClick}\r\n    >\r\n      <Choose>\r\n        <When\r\n          condition={\r\n            squareModel.state === SquareState.opened &&\r\n            squareModel.neighborsWithBomb > 0\r\n          }\r\n        >\r\n          {squareModel.neighborsWithBomb}\r\n        </When>\r\n        <When condition={squareModel.isFlagged}>\r\n          <FlagIcon />\r\n        </When>\r\n      </Choose>\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.button<{ state: SquareState; isFlagged: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  outline: none !important;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  ${({ state }) =>\r\n    state === SquareState.opened\r\n      ? `\r\n    border: none;\r\n  `\r\n      : \"\"}\r\n\r\n  background-color: ${({ state }) =>\r\n    state === SquareState.exploded\r\n      ? \"red\"\r\n      : state === SquareState.opened\r\n      ? \"rgba(0, 0, 0, 0.16)\"\r\n      : \"rgba(0, 0, 0, 0.36)\"};\r\n\r\n  color: #5960E4;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n`\r\n","import { Button, Dropdown, Label } from \"components\"\r\nimport { useDropdown } from \"hooks\"\r\nimport * as React from \"react\"\r\nimport { gameStore } from \"stores\"\r\nimport styled from \"styled-components\"\r\nimport { Dimensions } from \"types\"\r\n\r\nexport const StartScreen: React.FC = props => {\r\n  const gameModeDropdown = useDropdown([\r\n    { value: \"beginner\", content: \"Beginner - 9x9\" },\r\n    { value: \"advanced\", content: \"Advanced - 16x16\" },\r\n    { value: \"expert\", content: \"Expert - 16x30\" }\r\n  ])\r\n\r\n  const { selectedEntry } = gameModeDropdown\r\n\r\n  const handleStartGame = () => {\r\n    const dimensions: Record<string, Dimensions> = {\r\n      beginner: { width: 9, height: 9 },\r\n      advanced: { width: 16, height: 16 },\r\n      expert: { width: 30, height: 16 }\r\n    }\r\n\r\n    gameStore.setDimensions(dimensions[selectedEntry.value])\r\n    gameStore.startGame()\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Label>Game mode</Label>\r\n      <Dropdown {...gameModeDropdown} />\r\n\r\n      <Hr />\r\n\r\n      <Button onClick={handleStartGame}>Start game</Button>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.main`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  padding: 32px;\r\n  background-color: rgba(0, 0, 0, 0.36);\r\n  min-width: 300px;\r\n`\r\n\r\nconst Hr = styled.hr`\r\n  border-color: rgba(0, 0, 0, 0.2);\r\n  border-width: 1px;\r\n  margin: 32px 0;\r\n`\r\n","import { useState } from \"react\"\r\nimport { DropdownEntry } from \"types\"\r\n\r\nexport const useDropdown = (entries: DropdownEntry[]) => {\r\n  const [selectedEntry, setSelectedEntry] = useState(entries[0])\r\n\r\n  const onEntryChange = (entry: DropdownEntry) => {\r\n    setSelectedEntry(entry)\r\n  }\r\n\r\n  return { entries, selectedEntry, onEntryChange }\r\n}\r\n","import { CloseIcon } from \"icons\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport { gameStore } from \"stores\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const Topbar: React.FC = observer(props => {\r\n  const { bombAmount, flaggedAmount } = gameStore\r\n\r\n  const bombsLeft = bombAmount - flaggedAmount\r\n\r\n  return (\r\n    <Wrapper>\r\n      <BombsLeft>\r\n        <BombsLeftImportant>{bombsLeft}</BombsLeftImportant>mines left\r\n      </BombsLeft>\r\n      <StopGameButton onClick={() => gameStore.stopGame()}>\r\n        <CloseIcon />\r\n      </StopGameButton>\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst BombsLeft = styled.p`\r\n  color: #5960e4;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n  opacity: 0.75;\r\n  line-height: 0.75;\r\n`\r\n\r\nconst BombsLeftImportant = styled.span`\r\n  font-weight: 400;\r\n  font-size: 40px;\r\n  margin-right: 2px;\r\n`\r\n\r\nconst StopGameButton = styled.button`\r\n  all: unset;\r\n  line-height: 0;\r\n  cursor: pointer;\r\n`\r\n","import { App } from \"components\"\r\nimport { configure } from \"mobx\"\r\nimport * as React from \"react\"\r\nimport * as ReactDOM from \"react-dom\"\r\n\r\nconfigure({ enforceActions: \"always\" })\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}