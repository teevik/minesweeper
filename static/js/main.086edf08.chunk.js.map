{"version":3,"sources":["helpers/randomBetween.ts","models/SquareModel.ts","stores/gameStore.ts","containers/App.tsx","containers/BottomBar.tsx","containers/Game.tsx","containers/Header.tsx","containers/Minefield.tsx","icons/ChevronDown.tsx","icons/CloseIcon.tsx","icons/FlagIcon.tsx","icons/RefreshIcon.tsx","containers/Square.tsx","components/styles/ButtonStyles.ts","components/styles/DropdownStyles.ts","components/styles/InputStyles.ts","components/styles/LabelStyles.ts","components/Button.tsx","components/Dropdown.tsx","components/Input.tsx","components/Label.tsx","components/NumberInput.tsx","constants/boardInfo.ts","hooks/useNumberInput.ts","containers/StartScreen.tsx","hooks/useDropdown.ts","containers/TopBar.tsx","index.tsx"],"names":["randomBetween","min","max","Math","floor","random","SquareModel","_class","hasBomb","Object","classCallCheck","this","initializerDefineProperty","_descriptor","_descriptor2","createClass","key","value","neighbors","isFlagged","isOpened","neighborsWithFlag","neighborsWithBomb","forEach","neighbor","isClosed","onOpen","willExplode","state","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","get","filter","length","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","computed","containsCoordinates","list","_ref","x","y","find","coordinate","gameStore","boardWidth","boardHeight","totalBombAmount","boardInfo","width","height","bombAmount","_this","minefield","bombCoordinates","i","push","_loop","row","_loop2","bombCoordinate","square","j","neighborSquare","setNeighbors","flat","every","some","isExploded","hasWon","hasLost","App","observer","props","react","Wrapper","Header_Header","Game_Game","hidden","hasStopped","TopBar","Minefield","BottomBar","StartScreen_StartScreen","GlobalStyle","styled","div","_templateObject","createGlobalStyle","_templateObject2","resultContent","BottomBar_Wrapper","Result","BottomBar_templateObject","p","BottomBar_templateObject2","Game","Game_Wrapper","main","Game_templateObject","Header","Header_Wrapper","Title","header","Header_templateObject","h1","Header_templateObject2","gameHasEnded","renderedMinefield","map","id","Square","squareModel","className","classNames","Minefield_Wrapper","Minefield_templateObject","ChevronDown","ChevronDown_Wrapper","xmlns","viewBox","Path","d","svg","ChevronDown_templateObject","path","ChevronDown_templateObject2","CloseIcon","CloseIcon_Wrapper","transform","Line","x1","y2","x2","CloseIcon_templateObject","line","CloseIcon_templateObject2","FlagIcon","FlagIcon_Wrapper","Flag","Pole","y1","FlagIcon_templateObject","FlagIcon_templateObject2","_templateObject3","RefreshIcon","RefreshIcon_Wrapper","RefreshIcon_Path","RefreshIcon_templateObject","RefreshIcon_templateObject2","squareContent","FlagIcon_FlagIcon","Square_Wrapper","onClick","event","preventDefault","onContextMenu","toggleFlag","button","Square_templateObject","Button","ButtonStyles_templateObject","Dropdown","AriaMenubutton","DropdownStyles_templateObject","Menu","DropdownStyles_templateObject2","MenuItem","DropdownStyles_templateObject3","MenuButton","S","withComponent","Icon","_templateObject4","Input","input","InputStyles_templateObject","Label","label","LabelStyles_templateObject","ButtonStyles_Button","entries","selectedEntry","onEntryChange","menuItems","entry","DropdownStyles_Dropdown","content","onSelection","newEntry","tag","ChevronDown_ChevronDown","InputStyles_Input","LabelStyles_Label","NumberInput","setValue","_React$useState","React","_React$useState2","slicedToArray","isInputting","setIsInputting","_React$useState3","_React$useState4","rawValue","setRawValue","flushRawChanges","parseInt","Input_Input","type","onChange","target","onBlur","onKeyDown","changeAmount","shiftKey","handler","ArrowUp","ArrowDown","beginner","advanced","expert","useNumberInput","options","defaultValue","_setValue","actualInput","StartScreen","gameModeDropdown","_useState","useState","_useState2","setSelectedEntry","useDropdown","widthInput","heightInput","bombAmountInput","isCustom","totalAmountOfSquares","customSetup","Label_Label","NumberInput_NumberInput","StartScreen_Wrapper","Dropdown_Dropdown","Hr","Button_Button","setupGame","onStartGame","StartScreen_templateObject","hr","StartScreen_templateObject2","bombsLeft","flaggedAmount","TopBar_Wrapper","BombsLeft","BombsLeftImportant","GameButton","RefreshIcon_RefreshIcon","onStopGame","CloseIcon_CloseIcon","TopBar_templateObject","TopBar_templateObject2","span","TopBar_templateObject3","TopBar_templateObject4","configure","enforceActions","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.086edf08.chunk.js","sourcesContent":["export const randomBetween = (min: number, max: number) =>\r\n  Math.floor(Math.random() * (max - min + 1)) + min\r\n","import { action, computed, observable } from \"mobx\"\r\n\r\nexport type SquareState = \"opened\" | \"closed\" | \"exploded\"\r\n\r\nexport class SquareModel {\r\n  public readonly hasBomb: boolean\r\n  @observable public isFlagged = false\r\n  @observable private state: SquareState = \"closed\"\r\n\r\n  private neighbors!: SquareModel[]\r\n\r\n  constructor(hasBomb: boolean) {\r\n    this.hasBomb = hasBomb\r\n  }\r\n\r\n  public setNeighbors(neighbors: SquareModel[]) {\r\n    this.neighbors = neighbors\r\n  }\r\n\r\n  @action\r\n  public onOpen() {\r\n    if (this.isFlagged) return\r\n\r\n    // Open all neighbors\r\n    if (this.isOpened) {\r\n      if (this.neighborsWithFlag !== this.neighborsWithBomb) return\r\n\r\n      this.neighbors.forEach(neighbor => neighbor.isClosed && neighbor.onOpen())\r\n      return\r\n    }\r\n\r\n    const willExplode = this.hasBomb\r\n    this.state = willExplode ? \"exploded\" : \"opened\"\r\n\r\n    if (!willExplode && this.neighborsWithBomb === 0) {\r\n      for (const neighbor of this.neighbors) {\r\n        if (neighbor.isClosed) neighbor.onOpen()\r\n      }\r\n    }\r\n  }\r\n\r\n  @action\r\n  public toggleFlag() {\r\n    this.isFlagged = !this.isFlagged\r\n  }\r\n\r\n  @computed\r\n  public get neighborsWithBomb() {\r\n    const neighbors = this.neighbors.filter(neighbor => neighbor.hasBomb)\r\n\r\n    return neighbors.length\r\n  }\r\n\r\n  @computed\r\n  public get neighborsWithFlag() {\r\n    const neighbors = this.neighbors.filter(neighbor => neighbor.isFlagged)\r\n\r\n    return neighbors.length\r\n  }\r\n\r\n  @computed\r\n  public get isClosed() {\r\n    return this.state === \"closed\"\r\n  }\r\n\r\n  @computed\r\n  public get isOpened() {\r\n    return this.state === \"opened\"\r\n  }\r\n\r\n  @computed\r\n  public get isExploded() {\r\n    return this.state === \"exploded\"\r\n  }\r\n}\r\n","import { action, computed, observable } from \"mobx\"\r\nimport { randomBetween } from \"../helpers\"\r\nimport { SquareModel } from \"../models\"\r\nimport { BoardInfo } from \"../types\"\r\n\r\nexport type GameState = \"stopped\" | \"started\"\r\n\r\ninterface Coordinates {\r\n  x: number\r\n  y: number\r\n}\r\n\r\nconst containsCoordinates = (list: Coordinates[], { x, y }: Coordinates) => {\r\n  const item = list.find(coordinate => coordinate.x === x && coordinate.y === y)\r\n\r\n  return !!item\r\n}\r\n\r\nclass GameStore {\r\n  @observable\r\n  private state: GameState = \"stopped\"\r\n\r\n  @observable\r\n  public minefield: SquareModel[] = []\r\n\r\n  public boardWidth = 0\r\n  public boardHeight = 0\r\n  public totalBombAmount = 0\r\n\r\n  public setupGame(boardInfo: BoardInfo) {\r\n    const { width, height, bombAmount } = boardInfo\r\n\r\n    this.boardWidth = width\r\n    this.boardHeight = height\r\n    this.totalBombAmount = bombAmount\r\n  }\r\n\r\n  @action\r\n  public onStartGame() {\r\n    const minefield: SquareModel[][] = []\r\n\r\n    const bombCoordinates: Coordinates[] = []\r\n\r\n    for (let i = 0; i < this.totalBombAmount; i++) {\r\n      const x = randomBetween(0, this.boardWidth - 1)\r\n      const y = randomBetween(0, this.boardHeight - 1)\r\n\r\n      if (containsCoordinates(bombCoordinates, { x, y })) i--\r\n\r\n      bombCoordinates.push({ x, y })\r\n    }\r\n\r\n    for (let y = 0; y < this.boardHeight; y++) {\r\n      const row: SquareModel[] = []\r\n      minefield.push(row)\r\n\r\n      for (let x = 0; x < this.boardWidth; x++) {\r\n        let hasBomb = false\r\n\r\n        if (\r\n          bombCoordinates.find(\r\n            bombCoordinate => bombCoordinate.x === x && bombCoordinate.y === y\r\n          )\r\n        ) {\r\n          hasBomb = true\r\n        }\r\n\r\n        const square = new SquareModel(hasBomb)\r\n        row.push(square)\r\n      }\r\n    }\r\n\r\n    for (let y = 0; y < this.boardHeight; y++) {\r\n      const row = minefield[y]\r\n      for (let x = 0; x < this.boardWidth; x++) {\r\n        const square = row[x]\r\n\r\n        const neighbors: SquareModel[] = []\r\n\r\n        for (let i = -1; i < 2; i++) {\r\n          const row = minefield[y + i]\r\n          if (!row) continue\r\n\r\n          for (let j = -1; j < 2; j++) {\r\n            const neighborSquare = row[x + j]\r\n            if (neighborSquare === square) continue\r\n            if (neighborSquare) neighbors.push(neighborSquare)\r\n          }\r\n        }\r\n\r\n        square.setNeighbors(neighbors)\r\n      }\r\n    }\r\n\r\n    this.minefield = minefield.flat()\r\n    this.state = \"started\"\r\n  }\r\n\r\n  @action\r\n  public onStopGame() {\r\n    this.state = \"stopped\"\r\n  }\r\n\r\n  @computed\r\n  public get hasStarted() {\r\n    return this.state === \"started\"\r\n  }\r\n\r\n  @computed\r\n  public get hasStopped() {\r\n    return this.state === \"stopped\"\r\n  }\r\n\r\n  @computed\r\n  public get hasWon() {\r\n    return this.minefield.every(square =>\r\n      square.hasBomb ? square.isFlagged : square.isOpened\r\n    )\r\n  }\r\n\r\n  @computed\r\n  public get hasLost() {\r\n    return this.minefield.some(square => square.isExploded)\r\n  }\r\n\r\n  @computed\r\n  public get gameHasEnded() {\r\n    return this.hasWon || this.hasLost\r\n  }\r\n\r\n  @computed\r\n  public get bombAmount() {\r\n    return this.minefield.filter(square => square.hasBomb).length\r\n  }\r\n\r\n  @computed\r\n  public get flaggedAmount() {\r\n    return this.minefield.filter(square => square.isFlagged).length\r\n  }\r\n}\r\n\r\nexport const gameStore = new GameStore()\r\n","import { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport styled, { createGlobalStyle } from \"styled-components\"\r\nimport { BottomBar, Game, Header, Minefield, StartScreen, TopBar } from \".\"\r\nimport { gameStore } from \"../stores\"\r\n\r\nexport const App: React.FC = observer(props => {\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Header />\r\n        <Game hidden={gameStore.hasStopped}>\r\n          <TopBar />\r\n          <Minefield />\r\n          <BottomBar />\r\n        </Game>\r\n        <StartScreen hidden={!gameStore.hasStopped} />\r\n      </Wrapper>\r\n      <GlobalStyle />\r\n    </>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: inherit;\r\n  }\r\n  \r\n  body {\r\n    background-color: #0B0C20;\r\n    font-family: Montserrat, sans-serif;\r\n  }\r\n\r\n  [hidden] {\r\n    display: none !important;\r\n  }\r\n`\r\n","import { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { gameStore } from \"../stores\"\r\n\r\nexport const BottomBar: React.FC = observer(props => {\r\n  const { hasWon, hasLost } = gameStore\r\n\r\n  let resultContent: React.ReactNode\r\n\r\n  if (hasWon) resultContent = \"You won!\"\r\n  if (hasLost) resultContent = \"You lost!\"\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Result>{resultContent}</Result>\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 8px 0;\r\n`\r\n\r\nconst Result = styled.p`\r\n  color: #5960e4;\r\n  font-size: 30px;\r\n  font-weight: 500;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const Game: React.FC<React.HTMLAttributes<HTMLMainElement>> = props => {\r\n  return <Wrapper {...props} />\r\n}\r\n\r\nconst Wrapper = styled.main`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin: auto;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const Header: React.FC = props => {\r\n  return (\r\n    <Wrapper>\r\n      <Title>Minesweeper</Title>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.header`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 16px;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-weight: 500;\r\n  font-size: 40px;\r\n  color: #5960e4;\r\n  opacity: 0.72;\r\n`\r\n","import classNames from \"classnames\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Square } from \"../containers\"\r\nimport { gameStore } from \"../stores\"\r\n\r\nexport const Minefield: React.FC = observer(props => {\r\n  const { minefield, gameHasEnded, boardWidth, boardHeight } = gameStore\r\n\r\n  const renderedMinefield = minefield.map((square, id) => (\r\n    <Square key={id} squareModel={square} />\r\n  ))\r\n\r\n  const className = classNames({\r\n    gameHasEnded\r\n  })\r\n\r\n  return (\r\n    <Wrapper\r\n      className={className}\r\n      boardWidth={boardWidth}\r\n      boardHeight={boardHeight}\r\n    >\r\n      {renderedMinefield}\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div<{\r\n  boardWidth: number\r\n  boardHeight: number\r\n}>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${props => props.boardWidth}, 30px);\r\n  grid-template-rows: repeat(${props => props.boardHeight}, 30px);\r\n  grid-gap: 1px;\r\n\r\n  &.gameHasEnded {\r\n    pointer-events: none;\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const ChevronDown: React.FC = props => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 29.829 29.828\">\r\n      <Path d=\"M6,9l8.725,8.725L23.451,9\" />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  opacity: 0.83;\r\n  width: 20px;\r\n`\r\n\r\nconst Path = styled.path`\r\n  fill: none;\r\n  stroke: #5258d4;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const CloseIcon: React.FC = props => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 29.829 29.828\">\r\n      <g id=\"x\" transform=\"translate(-4.586 -4.586)\">\r\n        <Line x1=\"27\" y2=\"27\" transform=\"translate(6 6)\" />\r\n        <Line x2=\"27\" y2=\"27\" transform=\"translate(6 6)\" />\r\n      </g>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  opacity: 0.83;\r\n  height: 27px;\r\n`\r\n\r\nconst Line = styled.line`\r\n  fill: none;\r\n  stroke: #5258d4;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const FlagIcon: React.FC = props => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 22\">\r\n      <g transform=\"translate(-3 -1)\">\r\n        <Flag d=\"M4,15s1-1,4-1,5,2,8,2,4-1,4-1V3s-1,1-4,1S11,2,8,2,4,3,4,3Z\" />\r\n        <Pole y1=\"7\" transform=\"translate(4 15)\" />\r\n      </g>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  width: 16px;\r\n`\r\n\r\nconst Flag = styled.path`\r\n  fill: #5258d4;\r\n  stroke: #1f2356;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n\r\nconst Pole = styled.line`\r\n  fill: none;\r\n  stroke: #1f2356;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const RefreshIcon: React.FC = props => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 29.829 29.828\">\r\n      <g transform=\"translate(0 -1.94)\">\r\n        <Path d=\"M1,4v9.022h9.022\" transform=\"translate(0 0.503)\" />\r\n        <Path d=\"M26.022,23.022V14H17\" transform=\"translate(8.058 5.539)\" />\r\n        <Path d=\"M30.305,12.021A13.532,13.532,0,0,0,7.977,6.968L1,13.524m33.079,6.014L27.1,26.094A13.532,13.532,0,0,1,4.774,21.042\" />\r\n      </g>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  opacity: 0.83;\r\n  height: 27px;\r\n  width: 37px;\r\n  margin-left: -5px;\r\n`\r\n\r\nconst Path = styled.path`\r\n  fill: none;\r\n  stroke: #5258d4;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import classNames from \"classnames\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { FlagIcon } from \"../icons\"\r\nimport { SquareModel } from \"../models\"\r\nimport { gameStore } from \"../stores\"\r\n\r\ninterface SquareProps {\r\n  squareModel: SquareModel\r\n}\r\n\r\nexport const Square: React.FC<SquareProps> = observer(props => {\r\n  const { squareModel } = props\r\n  const { hasLost } = gameStore\r\n  const { isFlagged, isOpened, isExploded, hasBomb } = squareModel\r\n\r\n  const onLeftClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault()\r\n    if (isFlagged) return\r\n\r\n    squareModel.onOpen()\r\n  }\r\n\r\n  const onRightClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault()\r\n    if (!squareModel.isClosed) return\r\n\r\n    squareModel.toggleFlag()\r\n  }\r\n\r\n  let squareContent: React.ReactNode\r\n\r\n  if (isFlagged) squareContent = <FlagIcon />\r\n  if (isOpened && squareModel.neighborsWithBomb > 0)\r\n    squareContent = squareModel.neighborsWithBomb\r\n\r\n  const className = classNames({\r\n    isOpened,\r\n    isExploded: isExploded || (hasBomb && hasLost)\r\n  })\r\n\r\n  return (\r\n    <Wrapper\r\n      className={className}\r\n      onClick={onLeftClick}\r\n      onContextMenu={onRightClick}\r\n    >\r\n      {squareContent}\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.button`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  outline: none !important;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  background-color: rgba(0, 0, 0, 0.36);\r\n\r\n  &.isOpened,\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.16);\r\n  }\r\n\r\n  &.isExploded {\r\n    background-color: #5960e4;\r\n    border-radius: 50%;\r\n    margin: 4px;\r\n  }\r\n\r\n  color: #5960e4;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  border: none;\r\n  padding: 10px 48px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: rgba(89, 96, 228, 0.73);\r\n  background-color: #0b0c1e;\r\n  outline: none !important;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #0e1028;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #0c0d22;\r\n  }\r\n`\r\n","import * as AriaMenubutton from \"react-aria-menubutton\"\r\nimport styled from \"styled-components\"\r\nimport * as S from \".\"\r\n\r\nconst Wrapper = styled(AriaMenubutton.Wrapper)`\r\n  position: relative;\r\n  display: flex;\r\n`\r\n\r\nconst Menu = styled(AriaMenubutton.Menu)`\r\n  position: absolute;\r\n  top: 100%;\r\n  right: 0;\r\n  margin-top: 4px;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.2);\r\n`\r\n\r\nconst MenuItem = styled(AriaMenubutton.MenuItem)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  border: none;\r\n  padding: 10px 16px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: rgba(105, 108, 163, 0.73);\r\n  text-align: right;\r\n  background-color: #0b0c1e;\r\n  outline: none !important;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #0e1028;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #0c0d22;\r\n  }\r\n`\r\n\r\nconst MenuButton = S.Button.withComponent(AriaMenubutton.Button)\r\n\r\nconst Icon = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-left: 8px;\r\n  margin-left: auto;\r\n`\r\nexport const Dropdown = {\r\n  Wrapper,\r\n  Menu,\r\n  MenuItem,\r\n  MenuButton,\r\n  Icon\r\n}\r\n","import styled from \"styled-components\"\r\n\r\nexport const Input = styled.input`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: none;\r\n  padding: 10px 16px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: rgba(89, 96, 228, 0.73);\r\n  background-color: #0b0c1e;\r\n  outline: none !important;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #0e1028;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #0c0d22;\r\n  }\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Label = styled.label`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  color: #5960e4;\r\n`\r\n","import * as React from \"react\"\r\nimport * as S from \"./styles\"\r\n\r\ntype ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement>\r\n\r\nexport const Button: React.FC<ButtonProps> = props => {\r\n  return <S.Button {...props} />\r\n}\r\n","import * as React from \"react\"\r\nimport * as AriaMenubutton from \"react-aria-menubutton\"\r\nimport styled from \"styled-components\"\r\nimport { Button } from \"../components\"\r\nimport { ChevronDown } from \"../icons\"\r\nimport { DropdownEntry } from \"../types\"\r\nimport * as S from \"./styles\"\r\n\r\ninterface DropdownProps {\r\n  entries: DropdownEntry[]\r\n  selectedEntry: DropdownEntry\r\n  onEntryChange: (entry: DropdownEntry) => void\r\n}\r\n\r\nexport const Dropdown: React.FC<DropdownProps> = props => {\r\n  const { entries, selectedEntry, onEntryChange } = props\r\n\r\n  const handleSelection = (value: any) => {\r\n    const newEntry = entries.find(entry => entry.value === value)!\r\n    onEntryChange(newEntry)\r\n  }\r\n\r\n  const menuItems = entries.map(entry => {\r\n    return (\r\n      <S.Dropdown.MenuItem key={entry.value} value={entry.value}>\r\n        {entry.content}\r\n      </S.Dropdown.MenuItem>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <S.Dropdown.Wrapper onSelection={handleSelection}>\r\n        <S.Dropdown.MenuButton tag=\"button\">\r\n          {selectedEntry.content}\r\n          <S.Dropdown.Icon>\r\n            <ChevronDown />\r\n          </S.Dropdown.Icon>\r\n        </S.Dropdown.MenuButton>\r\n        <S.Dropdown.Menu>{menuItems}</S.Dropdown.Menu>\r\n      </S.Dropdown.Wrapper>\r\n    </div>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport * as S from \"./styles\"\r\n\r\ntype InputProps = React.InputHTMLAttributes<HTMLInputElement>\r\n\r\nexport const Input: React.FC<InputProps> = props => {\r\n  return <S.Input {...props} />\r\n}\r\n","import * as React from \"react\"\r\nimport * as S from \"./styles\"\r\n\r\ntype LabelProps = React.LabelHTMLAttributes<HTMLLabelElement>\r\n\r\nexport const Label: React.FC<LabelProps> = props => {\r\n  return <S.Label {...props} />\r\n}\r\n","import * as React from \"react\"\r\nimport { Input } from \".\"\r\nimport { NumberInputProps } from \"../types\"\r\n\r\nconst getValidNumber = (value: string) => parseInt(value) || 0\r\n\r\nexport const NumberInput: React.FC<NumberInputProps> = props => {\r\n  const { value, setValue } = props\r\n\r\n  const [isInputting, setIsInputting] = React.useState(false)\r\n  const [rawValue, setRawValue] = React.useState(\"\")\r\n\r\n  const flushRawChanges = () => {\r\n    if (isInputting) {\r\n      setIsInputting(false)\r\n      setValue(getValidNumber(rawValue))\r\n    }\r\n  }\r\n\r\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setIsInputting(true)\r\n    setRawValue(event.target.value)\r\n  }\r\n\r\n  const onBlur = () => {\r\n    flushRawChanges()\r\n  }\r\n\r\n  const onKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    const { key } = event\r\n\r\n    let changeAmount = event.shiftKey ? 10 : 1\r\n\r\n    const handlers: Record<string, () => number> = {\r\n      ArrowUp: () => value + changeAmount,\r\n      ArrowDown: () => value - changeAmount\r\n    }\r\n\r\n    const handler = handlers[key]\r\n    if (!handler) return\r\n\r\n    event.preventDefault()\r\n    flushRawChanges()\r\n    setValue(handler())\r\n  }\r\n\r\n  return (\r\n    <Input\r\n      type=\"text\"\r\n      value={isInputting ? rawValue : value}\r\n      onChange={onChange}\r\n      onBlur={onBlur}\r\n      onKeyDown={onKeyDown}\r\n    />\r\n  )\r\n}\r\n","import { BoardInfo } from \"../types\"\r\n\r\nexport const boardInfo: Record<string, BoardInfo> = {\r\n  beginner: { width: 9, height: 9, bombAmount: 10 },\r\n  advanced: { width: 16, height: 16, bombAmount: 40 },\r\n  expert: { width: 30, height: 16, bombAmount: 99 }\r\n}\r\n","import * as React from \"react\"\r\nimport { NumberInputProps } from \"../types\"\r\n\r\ninterface UseNumberInputOptions {\r\n  defaultValue: number\r\n  min: number\r\n  max: number\r\n}\r\n\r\nexport const useNumberInput = (\r\n  options: UseNumberInputOptions\r\n): NumberInputProps => {\r\n  const { min, max, defaultValue } = options\r\n\r\n  const [value, _setValue] = React.useState(defaultValue)\r\n\r\n  const setValue = (input: number) => {\r\n    let actualInput = input\r\n\r\n    if (input < min) actualInput = min\r\n    if (input > max) actualInput = max\r\n\r\n    _setValue(actualInput)\r\n  }\r\n\r\n  return { value, setValue }\r\n}\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Button, Dropdown, Label, NumberInput } from \"../components\"\r\nimport * as S from \"../components/styles\"\r\nimport { boardInfo } from \"../constants\"\r\nimport { useDropdown, useNumberInput } from \"../hooks\"\r\nimport { gameStore } from \"../stores\"\r\n\r\nexport const StartScreen: React.FC<\r\n  React.HTMLAttributes<HTMLMainElement>\r\n> = props => {\r\n  const gameModeDropdown = useDropdown([\r\n    { value: \"beginner\", content: \"Beginner - 9x9\" },\r\n    { value: \"advanced\", content: \"Advanced - 16x16\" },\r\n    { value: \"expert\", content: \"Expert - 30x16\" },\r\n    { value: \"custom\", content: \"Custom\" }\r\n  ])\r\n  const widthInput = useNumberInput({ defaultValue: 10, min: 1, max: 30 })\r\n  const heightInput = useNumberInput({ defaultValue: 10, min: 1, max: 30 })\r\n  const bombAmountInput = useNumberInput({ defaultValue: 20, min: 1, max: 100 })\r\n\r\n  const { selectedEntry } = gameModeDropdown\r\n  const isCustom = selectedEntry.value === \"custom\"\r\n\r\n  // There can't be more bombs than total amount of squares\r\n  const totalAmountOfSquares = widthInput.value * heightInput.value\r\n  if (bombAmountInput.value > totalAmountOfSquares) {\r\n    bombAmountInput.setValue(totalAmountOfSquares)\r\n  }\r\n\r\n  const handleStartGame = () => {\r\n    if (isCustom) {\r\n      gameStore.setupGame({\r\n        width: widthInput.value,\r\n        height: heightInput.value,\r\n        bombAmount: bombAmountInput.value\r\n      })\r\n    } else {\r\n      gameStore.setupGame(boardInfo[selectedEntry.value])\r\n    }\r\n\r\n    gameStore.onStartGame()\r\n  }\r\n\r\n  const customSetup = isCustom && (\r\n    <>\r\n      <Label>Width</Label>\r\n      <NumberInput {...widthInput} />\r\n      <Label>Height</Label>\r\n      <NumberInput {...heightInput} />\r\n      <Label>Amount of mines</Label>\r\n      <NumberInput {...bombAmountInput} />\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <Wrapper {...props}>\r\n      <Label>Game mode</Label>\r\n      <Dropdown {...gameModeDropdown} />\r\n\r\n      {customSetup}\r\n\r\n      <Hr />\r\n\r\n      <Button onClick={handleStartGame}>Start game</Button>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.main`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  padding: 32px;\r\n  background-color: rgba(0, 0, 0, 0.36);\r\n  min-width: 350px;\r\n\r\n  ${S.Label} {\r\n    margin-bottom: 4px;\r\n    &:not(:first-child) {\r\n      margin-top: 16px;\r\n    }\r\n  }\r\n`\r\n\r\nconst Hr = styled.hr`\r\n  border-color: rgba(255, 255, 255, 0.01);\r\n  border-width: 1px;\r\n  margin: 32px 0;\r\n`\r\n","import { useState } from \"react\"\r\nimport { DropdownEntry } from \"../types\"\r\n\r\nexport const useDropdown = (entries: DropdownEntry[]) => {\r\n  const [selectedEntry, setSelectedEntry] = useState(entries[0])\r\n\r\n  const onEntryChange = (entry: DropdownEntry) => {\r\n    setSelectedEntry(entry)\r\n  }\r\n\r\n  return { entries, selectedEntry, onEntryChange }\r\n}\r\n","import { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { CloseIcon, RefreshIcon } from \"../icons\"\r\nimport { gameStore } from \"../stores\"\r\n\r\nexport const TopBar: React.FC = observer(props => {\r\n  const { bombAmount, flaggedAmount } = gameStore\r\n\r\n  const bombsLeft = bombAmount - flaggedAmount\r\n\r\n  return (\r\n    <Wrapper>\r\n      <BombsLeft>\r\n        <BombsLeftImportant>{bombsLeft}</BombsLeftImportant>mines left\r\n      </BombsLeft>\r\n      <GameButton onClick={() => gameStore.onStartGame()}>\r\n        <RefreshIcon />\r\n      </GameButton>\r\n      <GameButton onClick={() => gameStore.onStopGame()}>\r\n        <CloseIcon />\r\n      </GameButton>\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst BombsLeft = styled.p`\r\n  color: #5960e4;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n  opacity: 0.75;\r\n  line-height: 0.75;\r\n\r\n  margin-right: auto;\r\n`\r\n\r\nconst BombsLeftImportant = styled.span`\r\n  font-weight: 400;\r\n  font-size: 40px;\r\n  margin-right: 2px;\r\n`\r\n\r\nconst GameButton = styled.button`\r\n  all: unset;\r\n  line-height: 0;\r\n  cursor: pointer;\r\n\r\n  &:hover * {\r\n    opacity: 1;\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n","import { configure } from \"mobx\"\r\nimport * as React from \"react\"\r\nimport * as ReactDOM from \"react-dom\"\r\nimport { App } from \"./containers\"\r\n\r\nconfigure({ enforceActions: \"always\" })\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}