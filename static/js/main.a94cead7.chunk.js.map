{"version":3,"sources":["contexts/GameStoreContext.ts","hooks/useNumberInput.ts","helpers/randomBetween.ts","models/SquareModel.ts","stores/GameStore.ts","containers/App.tsx","hooks/useStore.ts","containers/BottomBar.tsx","containers/Game.tsx","containers/Header.tsx","containers/Minefield.tsx","icons/ChevronDown.tsx","icons/CloseIcon.tsx","icons/FlagIcon.tsx","icons/RefreshIcon.tsx","containers/Square.tsx","components/styles/ButtonStyles.ts","components/styles/DropdownStyles.ts","components/styles/InputStyles.ts","components/styles/LabelStyles.ts","components/Button.tsx","components/Dropdown.tsx","components/Input.tsx","components/Label.tsx","components/NumberInput.tsx","constants/boardInfo.ts","containers/StartScreen.tsx","hooks/useDropdown.ts","containers/TopBar.tsx","index.tsx"],"names":["GameStoreContext","createContext","undefined","useNumberInput","options","min","max","defaultValue","_React$useState","React","_React$useState2","Object","slicedToArray","value","_setValue","setValue","input","actualInput","randomBetween","Math","floor","random","SquareModel","_class","hasBomb","classCallCheck","this","initializerDefineProperty","_descriptor","_descriptor2","createClass","key","neighbors","isFlagged","isOpened","neighborsWithFlag","neighborsWithBomb","forEach","neighbor","isClosed","onOpen","willExplode","state","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","err","return","get","filter","length","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","computed","containsCoordinates","list","_ref","x","y","find","coordinate","GameStore","GameStore_class","GameStore_descriptor","GameStore_descriptor2","boardWidth","boardHeight","totalBombAmount","boardInfo","width","height","bombAmount","_this","minefield","bombCoordinates","i","push","_loop","row","_loop2","bombCoordinate","square","j","neighborSquare","setNeighbors","flat","every","some","isExploded","hasWon","hasLost","App","observer","storeClass","gameStore","useMemo","react","Provider","Wrapper","Header_Header","Game_Game","hidden","hasStopped","TopBar","Minefield","BottomBar","StartScreen_StartScreen","GlobalStyle","styled","div","_templateObject","createGlobalStyle","_templateObject2","resultContent","useContext","BottomBar_Wrapper","Result","BottomBar_templateObject","p","BottomBar_templateObject2","Game","props","Game_Wrapper","main","Game_templateObject","Header","Header_Wrapper","Title","header","Header_templateObject","h1","Header_templateObject2","gameHasEnded","renderedMinefield","map","id","Square","squareModel","className","classNames","Minefield_Wrapper","Minefield_templateObject","ChevronDown","ChevronDown_Wrapper","xmlns","viewBox","Path","d","svg","ChevronDown_templateObject","path","ChevronDown_templateObject2","CloseIcon","CloseIcon_Wrapper","transform","Line","x1","y2","x2","CloseIcon_templateObject","line","CloseIcon_templateObject2","FlagIcon","FlagIcon_Wrapper","Flag","Pole","y1","FlagIcon_templateObject","FlagIcon_templateObject2","_templateObject3","RefreshIcon","RefreshIcon_Wrapper","RefreshIcon_Path","RefreshIcon_templateObject","RefreshIcon_templateObject2","squareContent","FlagIcon_FlagIcon","Square_Wrapper","onClick","event","preventDefault","onContextMenu","toggleFlag","button","Square_templateObject","Button","ButtonStyles_templateObject","Dropdown","AriaMenubutton","DropdownStyles_templateObject","Menu","DropdownStyles_templateObject2","MenuItem","DropdownStyles_templateObject3","MenuButton","S","withComponent","Icon","_templateObject4","Input","InputStyles_templateObject","Label","label","LabelStyles_templateObject","ButtonStyles_Button","entries","selectedEntry","onEntryChange","menuItems","entry","DropdownStyles_Dropdown","content","onSelection","newEntry","tag","ChevronDown_ChevronDown","InputStyles_Input","LabelStyles_Label","NumberInput","isInputting","setIsInputting","_React$useState3","_React$useState4","rawValue","setRawValue","flushRawChanges","parseInt","Input_Input","type","onChange","target","onBlur","onKeyDown","changeAmount","shiftKey","handler","ArrowUp","ArrowDown","beginner","advanced","expert","StartScreen","gameModeDropdown","_useState","useState","_useState2","setSelectedEntry","useDropdown","widthInput","heightInput","bombAmountInput","isCustom","totalAmountOfSquares","customSetup","Label_Label","NumberInput_NumberInput","StartScreen_Wrapper","Dropdown_Dropdown","Hr","Button_Button","setupGame","onStartGame","StartScreen_templateObject","hr","StartScreen_templateObject2","bombsLeft","flaggedAmount","TopBar_Wrapper","BombsLeft","BombsLeftImportant","GameButton","RefreshIcon_RefreshIcon","onStopGame","CloseIcon_CloseIcon","TopBar_templateObject","TopBar_templateObject2","span","TopBar_templateObject3","TopBar_templateObject4","configure","enforceActions","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a94cead7.chunk.js","sourcesContent":["import { createContext } from \"react\"\r\nimport { GameStore } from \"../stores\"\r\n\r\nexport const GameStoreContext = createContext<GameStore>(undefined as any)\r\n","import * as React from \"react\"\r\nimport { NumberInputProps } from \"../types\"\r\n\r\ninterface UseNumberInputOptions {\r\n  defaultValue: number\r\n  min: number\r\n  max: number\r\n}\r\n\r\nexport const useNumberInput = (\r\n  options: UseNumberInputOptions\r\n): NumberInputProps => {\r\n  const { min, max, defaultValue } = options\r\n\r\n  const [value, _setValue] = React.useState(defaultValue)\r\n\r\n  const setValue = (input: number) => {\r\n    let actualInput = input\r\n\r\n    if (input < min) actualInput = min\r\n    if (input > max) actualInput = max\r\n\r\n    _setValue(actualInput)\r\n  }\r\n\r\n  return { value, setValue }\r\n}\r\n","export const randomBetween = (min: number, max: number) =>\r\n  Math.floor(Math.random() * (max - min + 1)) + min\r\n","import { action, computed, observable } from \"mobx\"\r\n\r\nexport type SquareState = \"opened\" | \"closed\" | \"exploded\"\r\n\r\nexport class SquareModel {\r\n  public readonly hasBomb: boolean\r\n  @observable public isFlagged = false\r\n  @observable private state: SquareState = \"closed\"\r\n\r\n  private neighbors!: SquareModel[]\r\n\r\n  constructor(hasBomb: boolean) {\r\n    this.hasBomb = hasBomb\r\n  }\r\n\r\n  public setNeighbors(neighbors: SquareModel[]) {\r\n    this.neighbors = neighbors\r\n  }\r\n\r\n  @action\r\n  public onOpen() {\r\n    if (this.isFlagged) return\r\n\r\n    // Open all neighbors\r\n    if (this.isOpened) {\r\n      if (this.neighborsWithFlag !== this.neighborsWithBomb) return\r\n\r\n      this.neighbors.forEach(neighbor => neighbor.isClosed && neighbor.onOpen())\r\n      return\r\n    }\r\n\r\n    const willExplode = this.hasBomb\r\n    this.state = willExplode ? \"exploded\" : \"opened\"\r\n\r\n    if (!willExplode && this.neighborsWithBomb === 0) {\r\n      for (const neighbor of this.neighbors) {\r\n        if (neighbor.isClosed) neighbor.onOpen()\r\n      }\r\n    }\r\n  }\r\n\r\n  @action\r\n  public toggleFlag() {\r\n    this.isFlagged = !this.isFlagged\r\n  }\r\n\r\n  @computed\r\n  public get neighborsWithBomb() {\r\n    const neighbors = this.neighbors.filter(neighbor => neighbor.hasBomb)\r\n\r\n    return neighbors.length\r\n  }\r\n\r\n  @computed\r\n  public get neighborsWithFlag() {\r\n    const neighbors = this.neighbors.filter(neighbor => neighbor.isFlagged)\r\n\r\n    return neighbors.length\r\n  }\r\n\r\n  @computed\r\n  public get isClosed() {\r\n    return this.state === \"closed\"\r\n  }\r\n\r\n  @computed\r\n  public get isOpened() {\r\n    return this.state === \"opened\"\r\n  }\r\n\r\n  @computed\r\n  public get isExploded() {\r\n    return this.state === \"exploded\"\r\n  }\r\n}\r\n","import { action, computed, observable } from \"mobx\"\r\nimport { randomBetween } from \"../helpers\"\r\nimport { SquareModel } from \"../models\"\r\nimport { BoardInfo } from \"../types\"\r\n\r\nexport type GameState = \"stopped\" | \"started\"\r\n\r\ninterface Coordinates {\r\n  x: number\r\n  y: number\r\n}\r\n\r\nconst containsCoordinates = (list: Coordinates[], { x, y }: Coordinates) => {\r\n  const item = list.find(coordinate => coordinate.x === x && coordinate.y === y)\r\n\r\n  return !!item\r\n}\r\n\r\nexport class GameStore {\r\n  @observable\r\n  private state: GameState = \"stopped\"\r\n\r\n  @observable\r\n  public minefield: SquareModel[] = []\r\n\r\n  public boardWidth = 0\r\n  public boardHeight = 0\r\n  public totalBombAmount = 0\r\n\r\n  public setupGame(boardInfo: BoardInfo) {\r\n    const { width, height, bombAmount } = boardInfo\r\n\r\n    this.boardWidth = width\r\n    this.boardHeight = height\r\n    this.totalBombAmount = bombAmount\r\n  }\r\n\r\n  @action\r\n  public onStartGame() {\r\n    const minefield: SquareModel[][] = []\r\n\r\n    const bombCoordinates: Coordinates[] = []\r\n\r\n    for (let i = 0; i < this.totalBombAmount; i++) {\r\n      const x = randomBetween(0, this.boardWidth - 1)\r\n      const y = randomBetween(0, this.boardHeight - 1)\r\n\r\n      if (containsCoordinates(bombCoordinates, { x, y })) i--\r\n\r\n      bombCoordinates.push({ x, y })\r\n    }\r\n\r\n    for (let y = 0; y < this.boardHeight; y++) {\r\n      const row: SquareModel[] = []\r\n      minefield.push(row)\r\n\r\n      for (let x = 0; x < this.boardWidth; x++) {\r\n        let hasBomb = false\r\n\r\n        if (\r\n          bombCoordinates.find(\r\n            bombCoordinate => bombCoordinate.x === x && bombCoordinate.y === y\r\n          )\r\n        ) {\r\n          hasBomb = true\r\n        }\r\n\r\n        const square = new SquareModel(hasBomb)\r\n        row.push(square)\r\n      }\r\n    }\r\n\r\n    for (let y = 0; y < this.boardHeight; y++) {\r\n      const row = minefield[y]\r\n      for (let x = 0; x < this.boardWidth; x++) {\r\n        const square = row[x]\r\n\r\n        const neighbors: SquareModel[] = []\r\n\r\n        for (let i = -1; i < 2; i++) {\r\n          const row = minefield[y + i]\r\n          if (!row) continue\r\n\r\n          for (let j = -1; j < 2; j++) {\r\n            const neighborSquare = row[x + j]\r\n            if (neighborSquare === square) continue\r\n            if (neighborSquare) neighbors.push(neighborSquare)\r\n          }\r\n        }\r\n\r\n        square.setNeighbors(neighbors)\r\n      }\r\n    }\r\n\r\n    this.minefield = minefield.flat()\r\n    this.state = \"started\"\r\n  }\r\n\r\n  @action\r\n  public onStopGame() {\r\n    this.state = \"stopped\"\r\n  }\r\n\r\n  @computed\r\n  public get hasStarted() {\r\n    return this.state === \"started\"\r\n  }\r\n\r\n  @computed\r\n  public get hasStopped() {\r\n    return this.state === \"stopped\"\r\n  }\r\n\r\n  @computed\r\n  public get hasWon() {\r\n    return this.minefield.every(square =>\r\n      square.hasBomb ? square.isFlagged : square.isOpened\r\n    )\r\n  }\r\n\r\n  @computed\r\n  public get hasLost() {\r\n    return this.minefield.some(square => square.isExploded)\r\n  }\r\n\r\n  @computed\r\n  public get gameHasEnded() {\r\n    return this.hasWon || this.hasLost\r\n  }\r\n\r\n  @computed\r\n  public get bombAmount() {\r\n    return this.minefield.filter(square => square.hasBomb).length\r\n  }\r\n\r\n  @computed\r\n  public get flaggedAmount() {\r\n    return this.minefield.filter(square => square.isFlagged).length\r\n  }\r\n}\r\n","import { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport styled, { createGlobalStyle } from \"styled-components\"\r\nimport { BottomBar, Game, Header, Minefield, StartScreen, TopBar } from \".\"\r\nimport { GameStoreContext } from \"../contexts\"\r\nimport { useStore } from \"../hooks\"\r\nimport { GameStore } from \"../stores\"\r\n\r\nexport const App = observer(() => {\r\n  const gameStore = useStore(GameStore)\r\n\r\n  return (\r\n    <GameStoreContext.Provider value={gameStore}>\r\n      <Wrapper>\r\n        <Header />\r\n        <Game hidden={gameStore.hasStopped}>\r\n          <TopBar />\r\n          <Minefield />\r\n          <BottomBar />\r\n        </Game>\r\n        <StartScreen hidden={!gameStore.hasStopped} />\r\n      </Wrapper>\r\n      <GlobalStyle />\r\n    </GameStoreContext.Provider>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: inherit;\r\n  }\r\n  \r\n  body {\r\n    background-color: #0B0C20;\r\n    font-family: Montserrat, sans-serif;\r\n  }\r\n\r\n  [hidden] {\r\n    display: none !important;\r\n  }\r\n`\r\n","import { useMemo } from \"react\"\r\n\r\nexport const useStore = <StoreType>(storeClass: new () => StoreType) => {\r\n  const store = useMemo(() => new storeClass(), [storeClass])\r\n\r\n  return store\r\n}\r\n","import { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport { useContext } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { GameStoreContext } from \"../contexts\"\r\n\r\nexport const BottomBar = observer(() => {\r\n  const gameStore = useContext(GameStoreContext)\r\n  const { hasWon, hasLost } = gameStore\r\n\r\n  let resultContent: React.ReactNode\r\n\r\n  if (hasWon) resultContent = \"You won!\"\r\n  if (hasLost) resultContent = \"You lost!\"\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Result>{resultContent}</Result>\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 8px 0;\r\n`\r\n\r\nconst Result = styled.p`\r\n  color: #5960e4;\r\n  font-size: 30px;\r\n  font-weight: 500;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\ntype GameProps = React.HTMLAttributes<HTMLMainElement>\r\n\r\nexport const Game = (props: GameProps) => {\r\n  return <Wrapper {...props} />\r\n}\r\n\r\nconst Wrapper = styled.main`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin: auto;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Title>Minesweeper</Title>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.header`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 16px;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-weight: 500;\r\n  font-size: 40px;\r\n  color: #5960e4;\r\n  opacity: 0.72;\r\n`\r\n","import classNames from \"classnames\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport { useContext } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Square } from \"../containers\"\r\nimport { GameStoreContext } from \"../contexts\"\r\n\r\nexport const Minefield = observer(() => {\r\n  const gameStore = useContext(GameStoreContext)\r\n  const { minefield, gameHasEnded, boardWidth, boardHeight } = gameStore\r\n\r\n  const renderedMinefield = minefield.map((square, id) => (\r\n    <Square key={id} squareModel={square} />\r\n  ))\r\n\r\n  const className = classNames({\r\n    gameHasEnded\r\n  })\r\n\r\n  return (\r\n    <Wrapper\r\n      className={className}\r\n      boardWidth={boardWidth}\r\n      boardHeight={boardHeight}\r\n    >\r\n      {renderedMinefield}\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div<{\r\n  boardWidth: number\r\n  boardHeight: number\r\n}>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${props => props.boardWidth}, 30px);\r\n  grid-template-rows: repeat(${props => props.boardHeight}, 30px);\r\n  grid-gap: 1px;\r\n\r\n  &.gameHasEnded {\r\n    pointer-events: none;\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const ChevronDown = () => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 29.829 29.828\">\r\n      <Path d=\"M6,9l8.725,8.725L23.451,9\" />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  opacity: 0.83;\r\n  width: 20px;\r\n`\r\n\r\nconst Path = styled.path`\r\n  fill: none;\r\n  stroke: #5258d4;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const CloseIcon = () => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 29.829 29.828\">\r\n      <g id=\"x\" transform=\"translate(-4.586 -4.586)\">\r\n        <Line x1=\"27\" y2=\"27\" transform=\"translate(6 6)\" />\r\n        <Line x2=\"27\" y2=\"27\" transform=\"translate(6 6)\" />\r\n      </g>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  opacity: 0.83;\r\n  height: 27px;\r\n`\r\n\r\nconst Line = styled.line`\r\n  fill: none;\r\n  stroke: #5258d4;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const FlagIcon = () => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 22\">\r\n      <g transform=\"translate(-3 -1)\">\r\n        <Flag d=\"M4,15s1-1,4-1,5,2,8,2,4-1,4-1V3s-1,1-4,1S11,2,8,2,4,3,4,3Z\" />\r\n        <Pole y1=\"7\" transform=\"translate(4 15)\" />\r\n      </g>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  width: 16px;\r\n`\r\n\r\nconst Flag = styled.path`\r\n  fill: #5258d4;\r\n  stroke: #1f2356;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n\r\nconst Pole = styled.line`\r\n  fill: none;\r\n  stroke: #1f2356;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const RefreshIcon = () => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 29.829 29.828\">\r\n      <g transform=\"translate(0 -1.94)\">\r\n        <Path d=\"M1,4v9.022h9.022\" transform=\"translate(0 0.503)\" />\r\n        <Path d=\"M26.022,23.022V14H17\" transform=\"translate(8.058 5.539)\" />\r\n        <Path d=\"M30.305,12.021A13.532,13.532,0,0,0,7.977,6.968L1,13.524m33.079,6.014L27.1,26.094A13.532,13.532,0,0,1,4.774,21.042\" />\r\n      </g>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  opacity: 0.83;\r\n  height: 27px;\r\n  width: 37px;\r\n  margin-left: -5px;\r\n`\r\n\r\nconst Path = styled.path`\r\n  fill: none;\r\n  stroke: #5258d4;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import classNames from \"classnames\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport { useContext } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { GameStoreContext } from \"../contexts\"\r\nimport { FlagIcon } from \"../icons\"\r\nimport { SquareModel } from \"../models\"\r\n\r\ninterface SquareProps {\r\n  squareModel: SquareModel\r\n}\r\n\r\nexport const Square = observer((props: SquareProps) => {\r\n  const { squareModel } = props\r\n  const gameStore = useContext(GameStoreContext)\r\n  const { hasLost } = gameStore\r\n  const { isFlagged, isOpened, isExploded, hasBomb } = squareModel\r\n\r\n  const onLeftClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault()\r\n    if (isFlagged) return\r\n\r\n    squareModel.onOpen()\r\n  }\r\n\r\n  const onRightClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault()\r\n    if (!squareModel.isClosed) return\r\n\r\n    squareModel.toggleFlag()\r\n  }\r\n\r\n  let squareContent: React.ReactNode\r\n\r\n  if (isFlagged) squareContent = <FlagIcon />\r\n  if (isOpened && squareModel.neighborsWithBomb > 0)\r\n    squareContent = squareModel.neighborsWithBomb\r\n\r\n  const className = classNames({\r\n    isOpened,\r\n    isExploded: isExploded || (hasBomb && hasLost)\r\n  })\r\n\r\n  return (\r\n    <Wrapper\r\n      className={className}\r\n      onClick={onLeftClick}\r\n      onContextMenu={onRightClick}\r\n    >\r\n      {squareContent}\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.button`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  outline: none !important;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  background-color: rgba(0, 0, 0, 0.36);\r\n\r\n  &.isOpened,\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.16);\r\n  }\r\n\r\n  &.isExploded {\r\n    background-color: #5960e4;\r\n    border-radius: 50%;\r\n    margin: 4px;\r\n  }\r\n\r\n  color: #5960e4;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  border: none;\r\n  padding: 10px 48px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: rgba(89, 96, 228, 0.73);\r\n  background-color: #0b0c1e;\r\n  outline: none !important;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #0e1028;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #0c0d22;\r\n  }\r\n`\r\n","import * as AriaMenubutton from \"react-aria-menubutton\"\r\nimport styled from \"styled-components\"\r\nimport * as S from \".\"\r\n\r\nconst Wrapper = styled(AriaMenubutton.Wrapper)`\r\n  position: relative;\r\n  display: flex;\r\n`\r\n\r\nconst Menu = styled(AriaMenubutton.Menu)`\r\n  position: absolute;\r\n  top: 100%;\r\n  right: 0;\r\n  margin-top: 4px;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.2);\r\n`\r\n\r\nconst MenuItem = styled(AriaMenubutton.MenuItem)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  border: none;\r\n  padding: 10px 16px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: rgba(104, 107, 171, 0.8);\r\n  text-align: right;\r\n  background-color: #0b0c1e;\r\n  outline: none !important;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #0e1028;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #0c0d22;\r\n  }\r\n`\r\n\r\nconst MenuButton = S.Button.withComponent(AriaMenubutton.Button)\r\n\r\nconst Icon = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-left: 8px;\r\n  margin-left: auto;\r\n`\r\nexport const Dropdown = {\r\n  Wrapper,\r\n  Menu,\r\n  MenuItem,\r\n  MenuButton,\r\n  Icon\r\n}\r\n","import styled from \"styled-components\"\r\n\r\nexport const Input = styled.input`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: none;\r\n  padding: 10px 16px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: rgba(89, 96, 228, 0.73);\r\n  background-color: #0b0c1e;\r\n  outline: none !important;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #0e1028;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #0c0d22;\r\n  }\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Label = styled.label`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  color: #5960e4;\r\n`\r\n","import * as React from \"react\"\r\nimport * as S from \"./styles\"\r\n\r\ntype ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement>\r\n\r\nexport const Button = (props: ButtonProps) => {\r\n  return <S.Button {...props} />\r\n}\r\n","import * as React from \"react\"\r\nimport { ChevronDown } from \"../icons\"\r\nimport { DropdownEntry } from \"../types\"\r\nimport * as S from \"./styles\"\r\n\r\ninterface DropdownProps {\r\n  entries: DropdownEntry[]\r\n  selectedEntry: DropdownEntry\r\n  onEntryChange: (entry: DropdownEntry) => void\r\n}\r\n\r\nexport const Dropdown = (props: DropdownProps) => {\r\n  const { entries, selectedEntry, onEntryChange } = props\r\n\r\n  const handleSelection = (value: any) => {\r\n    const newEntry = entries.find(entry => entry.value === value)!\r\n    onEntryChange(newEntry)\r\n  }\r\n\r\n  const menuItems = entries.map(entry => {\r\n    return (\r\n      <S.Dropdown.MenuItem key={entry.value} value={entry.value}>\r\n        {entry.content}\r\n      </S.Dropdown.MenuItem>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <S.Dropdown.Wrapper onSelection={handleSelection}>\r\n        <S.Dropdown.MenuButton tag=\"button\">\r\n          {selectedEntry.content}\r\n          <S.Dropdown.Icon>\r\n            <ChevronDown />\r\n          </S.Dropdown.Icon>\r\n        </S.Dropdown.MenuButton>\r\n        <S.Dropdown.Menu>{menuItems}</S.Dropdown.Menu>\r\n      </S.Dropdown.Wrapper>\r\n    </div>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\nimport * as S from \"./styles\"\r\n\r\ntype InputProps = React.InputHTMLAttributes<HTMLInputElement>\r\n\r\nexport const Input = (props: InputProps) => {\r\n  return <S.Input {...props} />\r\n}\r\n","import * as React from \"react\"\r\nimport * as S from \"./styles\"\r\n\r\ntype LabelProps = React.LabelHTMLAttributes<HTMLLabelElement>\r\n\r\nexport const Label = (props: LabelProps) => {\r\n  return <S.Label {...props} />\r\n}\r\n","import * as React from \"react\"\r\nimport { Input } from \".\"\r\nimport { NumberInputProps } from \"../types\"\r\n\r\nconst getValidNumber = (value: string) => parseInt(value) || 0\r\n\r\nexport const NumberInput = (props: NumberInputProps) => {\r\n  const { value, setValue } = props\r\n\r\n  const [isInputting, setIsInputting] = React.useState(false)\r\n  const [rawValue, setRawValue] = React.useState(\"\")\r\n\r\n  const flushRawChanges = () => {\r\n    if (isInputting) {\r\n      setIsInputting(false)\r\n      setValue(getValidNumber(rawValue))\r\n    }\r\n  }\r\n\r\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setIsInputting(true)\r\n    setRawValue(event.target.value)\r\n  }\r\n\r\n  const onBlur = () => {\r\n    flushRawChanges()\r\n  }\r\n\r\n  const onKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    const { key } = event\r\n\r\n    let changeAmount = event.shiftKey ? 10 : 1\r\n\r\n    const handlers: Record<string, () => number> = {\r\n      ArrowUp: () => value + changeAmount,\r\n      ArrowDown: () => value - changeAmount\r\n    }\r\n\r\n    const handler = handlers[key]\r\n    if (!handler) return\r\n\r\n    event.preventDefault()\r\n    flushRawChanges()\r\n    setValue(handler())\r\n  }\r\n\r\n  return (\r\n    <Input\r\n      type=\"text\"\r\n      value={isInputting ? rawValue : value}\r\n      onChange={onChange}\r\n      onBlur={onBlur}\r\n      onKeyDown={onKeyDown}\r\n    />\r\n  )\r\n}\r\n","import { BoardInfo } from \"../types\"\r\n\r\nexport const boardInfo: Record<string, BoardInfo> = {\r\n  beginner: { width: 9, height: 9, bombAmount: 10 },\r\n  advanced: { width: 16, height: 16, bombAmount: 40 },\r\n  expert: { width: 30, height: 16, bombAmount: 99 }\r\n}\r\n","import * as React from \"react\"\r\nimport { useContext } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Button, Dropdown, Label, NumberInput } from \"../components\"\r\nimport * as S from \"../components/styles\"\r\nimport { boardInfo } from \"../constants\"\r\nimport { GameStoreContext } from \"../contexts\"\r\nimport { useDropdown, useNumberInput } from \"../hooks\"\r\n\r\ntype StartScreenProps = React.HTMLAttributes<HTMLMainElement>\r\n\r\nexport const StartScreen = (props: StartScreenProps) => {\r\n  const gameStore = useContext(GameStoreContext)\r\n  const gameModeDropdown = useDropdown([\r\n    { value: \"beginner\", content: \"Beginner - 9x9\" },\r\n    { value: \"advanced\", content: \"Advanced - 16x16\" },\r\n    { value: \"expert\", content: \"Expert - 30x16\" },\r\n    { value: \"custom\", content: \"Custom\" }\r\n  ])\r\n  const widthInput = useNumberInput({ defaultValue: 10, min: 1, max: 30 })\r\n  const heightInput = useNumberInput({ defaultValue: 10, min: 1, max: 30 })\r\n  const bombAmountInput = useNumberInput({ defaultValue: 20, min: 1, max: 100 })\r\n\r\n  const { selectedEntry } = gameModeDropdown\r\n  const isCustom = selectedEntry.value === \"custom\"\r\n\r\n  // There can't be more bombs than total amount of squares\r\n  const totalAmountOfSquares = widthInput.value * heightInput.value\r\n  if (bombAmountInput.value > totalAmountOfSquares) {\r\n    bombAmountInput.setValue(totalAmountOfSquares)\r\n  }\r\n\r\n  const handleStartGame = () => {\r\n    if (isCustom) {\r\n      gameStore.setupGame({\r\n        width: widthInput.value,\r\n        height: heightInput.value,\r\n        bombAmount: bombAmountInput.value\r\n      })\r\n    } else {\r\n      gameStore.setupGame(boardInfo[selectedEntry.value])\r\n    }\r\n\r\n    gameStore.onStartGame()\r\n  }\r\n\r\n  const customSetup = isCustom && (\r\n    <>\r\n      <Label>Width</Label>\r\n      <NumberInput {...widthInput} />\r\n      <Label>Height</Label>\r\n      <NumberInput {...heightInput} />\r\n      <Label>Amount of mines</Label>\r\n      <NumberInput {...bombAmountInput} />\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <Wrapper {...props}>\r\n      <Label>Game mode</Label>\r\n      <Dropdown {...gameModeDropdown} />\r\n\r\n      {customSetup}\r\n\r\n      <Hr />\r\n\r\n      <Button onClick={handleStartGame}>Start game</Button>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.main`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  padding: 32px;\r\n  background-color: rgba(0, 0, 0, 0.36);\r\n  min-width: 350px;\r\n\r\n  ${S.Label} {\r\n    margin-bottom: 4px;\r\n    &:not(:first-child) {\r\n      margin-top: 16px;\r\n    }\r\n  }\r\n`\r\n\r\nconst Hr = styled.hr`\r\n  border-color: rgba(255, 255, 255, 0.01);\r\n  border-width: 1px;\r\n  margin: 32px 0;\r\n`\r\n","import { useState } from \"react\"\r\nimport { DropdownEntry } from \"../types\"\r\n\r\nexport const useDropdown = (entries: DropdownEntry[]) => {\r\n  const [selectedEntry, setSelectedEntry] = useState(entries[0])\r\n\r\n  const onEntryChange = (entry: DropdownEntry) => {\r\n    setSelectedEntry(entry)\r\n  }\r\n\r\n  return { entries, selectedEntry, onEntryChange }\r\n}\r\n","import { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport { useContext } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { GameStoreContext } from \"../contexts\"\r\nimport { CloseIcon, RefreshIcon } from \"../icons\"\r\n\r\nexport const TopBar = observer(() => {\r\n  const gameStore = useContext(GameStoreContext)\r\n  const { bombAmount, flaggedAmount } = gameStore\r\n\r\n  const bombsLeft = bombAmount - flaggedAmount\r\n\r\n  return (\r\n    <Wrapper>\r\n      <BombsLeft>\r\n        <BombsLeftImportant>{bombsLeft}</BombsLeftImportant>mines left\r\n      </BombsLeft>\r\n      <GameButton onClick={() => gameStore.onStartGame()}>\r\n        <RefreshIcon />\r\n      </GameButton>\r\n      <GameButton onClick={() => gameStore.onStopGame()}>\r\n        <CloseIcon />\r\n      </GameButton>\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst BombsLeft = styled.p`\r\n  color: #5960e4;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n  opacity: 0.75;\r\n  line-height: 0.75;\r\n\r\n  margin-right: auto;\r\n`\r\n\r\nconst BombsLeftImportant = styled.span`\r\n  font-weight: 400;\r\n  font-size: 40px;\r\n  margin-right: 2px;\r\n`\r\n\r\nconst GameButton = styled.button`\r\n  all: unset;\r\n  line-height: 0;\r\n  cursor: pointer;\r\n\r\n  &:hover * {\r\n    opacity: 1;\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n","import { configure } from \"mobx\"\r\nimport * as React from \"react\"\r\nimport * as ReactDOM from \"react-dom\"\r\nimport { App } from \"./containers\"\r\n\r\nconfigure({ enforceActions: \"always\" })\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}