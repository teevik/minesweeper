{"version":3,"sources":["helpers/randomBetween.ts","models/SquareModel.ts","stores/gameStore.ts","containers/App.tsx","containers/BottomBar.tsx","containers/Game.tsx","containers/Header.tsx","containers/Minefield.tsx","icons/ChevronDown.tsx","icons/CloseIcon.tsx","icons/FlagIcon.tsx","icons/RefreshIcon.tsx","containers/Square.tsx","components/Button.tsx","components/Dropdown.tsx","components/Label.tsx","constants/boardInfo.ts","containers/StartScreen.tsx","hooks/useDropdown.ts","containers/TopBar.tsx","index.tsx"],"names":["randomBetween","min","max","Math","floor","random","SquareModel","_class","hasBomb","Object","classCallCheck","this","initializerDefineProperty","_descriptor","_descriptor2","createClass","key","value","neighbors","state","willExplode","neighborsWithBomb","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","neighbor","onOpen","err","return","isFlagged","get","filter","length","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","computed","containsCoordinates","list","_ref","x","y","find","coordinate","gameStore","boardWidth","boardHeight","totalBombAmount","boardInfo","width","height","bombAmount","_this","minefield","bombCoordinates","i","push","_loop","row","_loop2","bombCoordinate","square","j","neighborSquare","setNeighbors","flat","every","isOpened","some","isExploded","hasWon","hasLost","App","observer","props","react","Wrapper","Header_Header","hasStopped","StartScreen_StartScreen","Game_Game","TopBar","Minefield","BottomBar","GlobalStyle","styled","div","_templateObject","createGlobalStyle","_templateObject2","resultContent","BottomBar_Wrapper","Result","BottomBar_templateObject","p","BottomBar_templateObject2","Game","Game_Wrapper","children","main","Game_templateObject","Header","Header_Wrapper","Title","header","Header_templateObject","h1","Header_templateObject2","gameHasEnded","renderedMinefield","map","id","Square","squareModel","className","classNames","Minefield_Wrapper","Minefield_templateObject","ChevronDown","ChevronDown_Wrapper","xmlns","viewBox","Path","d","svg","ChevronDown_templateObject","path","ChevronDown_templateObject2","CloseIcon","CloseIcon_Wrapper","transform","Line","x1","y2","x2","CloseIcon_templateObject","line","CloseIcon_templateObject2","FlagIcon","FlagIcon_Wrapper","Flag","Pole","y1","FlagIcon_templateObject","FlagIcon_templateObject2","_templateObject3","RefreshIcon","RefreshIcon_Wrapper","RefreshIcon_Path","RefreshIcon_templateObject","RefreshIcon_templateObject2","squareContent","FlagIcon_FlagIcon","Square_Wrapper","onClick","event","preventDefault","onContextMenu","isClosed","toggleFlag","button","Square_templateObject","Button","Button_templateObject","Dropdown","entries","selectedEntry","onEntryChange","menuItems","entry","MenuItem","content","Dropdown_Wrapper","onSelection","newEntry","MenuButton","tag","Icon","ChevronDown_ChevronDown","Menu","AriaMenubutton","Dropdown_templateObject","Dropdown_templateObject2","Dropdown_templateObject3","withComponent","_templateObject4","Label","label","Label_templateObject","beginner","advanced","expert","StartScreen","gameModeDropdown","_useState","useState","_useState2","slicedToArray","setSelectedEntry","useDropdown","StartScreen_Wrapper","Dropdown_Dropdown","Hr","setupGame","onStartGame","StartScreen_templateObject","hr","StartScreen_templateObject2","bombsLeft","flaggedAmount","TopBar_Wrapper","BombsLeft","BombsLeftImportant","GameButton","RefreshIcon_RefreshIcon","onStopGame","CloseIcon_CloseIcon","TopBar_templateObject","TopBar_templateObject2","span","TopBar_templateObject3","TopBar_templateObject4","configure","enforceActions","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6de10b5e.chunk.js","sourcesContent":["export const randomBetween = (min: number, max: number) =>\r\n  Math.floor(Math.random() * (max - min + 1)) + min\r\n","import { action, computed, observable } from \"mobx\"\r\n\r\nexport type SquareState = \"opened\" | \"closed\" | \"exploded\"\r\n\r\nexport class SquareModel {\r\n  public readonly hasBomb: boolean\r\n  @observable public isFlagged = false\r\n  @observable private state: SquareState = \"closed\"\r\n\r\n  private neighbors!: SquareModel[]\r\n\r\n  constructor(hasBomb: boolean) {\r\n    this.hasBomb = hasBomb\r\n  }\r\n\r\n  public setNeighbors(neighbors: SquareModel[]) {\r\n    this.neighbors = neighbors\r\n  }\r\n\r\n  @action\r\n  public onOpen() {\r\n    if (this.state === \"opened\") return\r\n\r\n    const willExplode = this.hasBomb\r\n    this.state = willExplode ? \"exploded\" : \"opened\"\r\n\r\n    if (!willExplode && this.neighborsWithBomb === 0) {\r\n      for (const neighbor of this.neighbors) {\r\n        if (neighbor.state === \"closed\") neighbor.onOpen()\r\n      }\r\n    }\r\n  }\r\n\r\n  @action\r\n  public toggleFlag() {\r\n    this.isFlagged = !this.isFlagged\r\n  }\r\n\r\n  @computed\r\n  public get neighborsWithBomb() {\r\n    const neighbors = this.neighbors.filter(neighbor => neighbor.hasBomb)\r\n\r\n    return neighbors.length\r\n  }\r\n\r\n  @computed\r\n  public get isClosed() {\r\n    return this.state === \"closed\"\r\n  }\r\n\r\n  @computed\r\n  public get isOpened() {\r\n    return this.state === \"opened\"\r\n  }\r\n\r\n  @computed\r\n  public get isExploded() {\r\n    return this.state === \"exploded\"\r\n  }\r\n}\r\n","import { action, computed, observable } from \"mobx\"\r\nimport { randomBetween } from \"../helpers\"\r\nimport { SquareModel } from \"../models\"\r\nimport { BoardInfo } from \"../types\"\r\n\r\nexport type GameState = \"stopped\" | \"started\"\r\n\r\ninterface Coordinates {\r\n  x: number\r\n  y: number\r\n}\r\n\r\nconst containsCoordinates = (list: Coordinates[], { x, y }: Coordinates) => {\r\n  const item = list.find(coordinate => coordinate.x === x && coordinate.y === y)\r\n\r\n  return !!item\r\n}\r\n\r\nclass GameStore {\r\n  @observable\r\n  private state: GameState = \"stopped\"\r\n\r\n  @observable\r\n  public minefield: SquareModel[] = []\r\n\r\n  public boardWidth = 0\r\n  public boardHeight = 0\r\n  public totalBombAmount = 0\r\n\r\n  public setupGame(boardInfo: BoardInfo) {\r\n    const { width, height, bombAmount } = boardInfo\r\n\r\n    this.boardWidth = width\r\n    this.boardHeight = height\r\n    this.totalBombAmount = bombAmount\r\n  }\r\n\r\n  @action\r\n  public onStartGame() {\r\n    const minefield: SquareModel[][] = []\r\n\r\n    const bombCoordinates: Coordinates[] = []\r\n\r\n    for (let i = 0; i < this.totalBombAmount; i++) {\r\n      const x = randomBetween(0, this.boardWidth - 1)\r\n      const y = randomBetween(0, this.boardHeight - 1)\r\n\r\n      if (containsCoordinates(bombCoordinates, { x, y })) i--\r\n\r\n      bombCoordinates.push({ x, y })\r\n    }\r\n\r\n    for (let y = 0; y < this.boardHeight; y++) {\r\n      const row: SquareModel[] = []\r\n      minefield.push(row)\r\n\r\n      for (let x = 0; x < this.boardWidth; x++) {\r\n        let hasBomb = false\r\n\r\n        if (\r\n          bombCoordinates.find(\r\n            bombCoordinate => bombCoordinate.x === x && bombCoordinate.y === y\r\n          )\r\n        ) {\r\n          hasBomb = true\r\n        }\r\n\r\n        const square = new SquareModel(hasBomb)\r\n        row.push(square)\r\n      }\r\n    }\r\n\r\n    for (let y = 0; y < this.boardHeight; y++) {\r\n      const row = minefield[y]\r\n      for (let x = 0; x < this.boardWidth; x++) {\r\n        const square = row[x]\r\n\r\n        const neighbors: SquareModel[] = []\r\n\r\n        for (let i = -1; i < 2; i++) {\r\n          const row = minefield[y + i]\r\n          if (!row) continue\r\n\r\n          for (let j = -1; j < 2; j++) {\r\n            const neighborSquare = row[x + j]\r\n            if (neighborSquare === square) continue\r\n            if (neighborSquare) neighbors.push(neighborSquare)\r\n          }\r\n        }\r\n\r\n        square.setNeighbors(neighbors)\r\n      }\r\n    }\r\n\r\n    this.minefield = minefield.flat()\r\n    this.state = \"started\"\r\n  }\r\n\r\n  @action\r\n  public onStopGame() {\r\n    this.state = \"stopped\"\r\n  }\r\n\r\n  @computed\r\n  public get hasStarted() {\r\n    return this.state === \"started\"\r\n  }\r\n\r\n  @computed\r\n  public get hasStopped() {\r\n    return this.state === \"stopped\"\r\n  }\r\n\r\n  @computed\r\n  public get hasWon() {\r\n    return this.minefield.every(square =>\r\n      square.hasBomb ? square.isFlagged : square.isOpened\r\n    )\r\n  }\r\n\r\n  @computed\r\n  public get hasLost() {\r\n    return this.minefield.some(square => square.isExploded)\r\n  }\r\n\r\n  @computed\r\n  public get gameHasEnded() {\r\n    return this.hasWon || this.hasLost\r\n  }\r\n\r\n  @computed\r\n  public get bombAmount() {\r\n    return this.minefield.filter(square => square.hasBomb).length\r\n  }\r\n\r\n  @computed\r\n  public get flaggedAmount() {\r\n    return this.minefield.filter(square => square.isFlagged).length\r\n  }\r\n}\r\n\r\nexport const gameStore = new GameStore()\r\n","import { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport styled, { createGlobalStyle } from \"styled-components\"\r\nimport { BottomBar, Game, Header, Minefield, StartScreen, TopBar } from \".\"\r\nimport { gameStore } from \"../stores\"\r\n\r\nconst renderStartScreen = () => <StartScreen />\r\n\r\nconst renderGame = () => (\r\n  <Game>\r\n    <TopBar />\r\n    <Minefield />\r\n    <BottomBar />\r\n  </Game>\r\n)\r\n\r\nexport const App: React.FC = observer(props => {\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Header />\r\n        {gameStore.hasStopped ? renderStartScreen() : renderGame()}\r\n      </Wrapper>\r\n      <GlobalStyle />\r\n    </>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: inherit;\r\n  }\r\n  \r\n  body {\r\n    background-color: #0B0C20;\r\n    font-family: Montserrat, sans-serif;\r\n  }\r\n`\r\n","import { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { gameStore } from \"../stores\"\r\n\r\nexport const BottomBar: React.FC = observer(props => {\r\n  const { hasWon, hasLost } = gameStore\r\n\r\n  let resultContent: React.ReactNode\r\n\r\n  if (hasWon) resultContent = \"You won!\"\r\n  if (hasLost) resultContent = \"You lost!\"\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Result>{resultContent}</Result>\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 8px 0;\r\n`\r\n\r\nconst Result = styled.p`\r\n  color: #5960e4;\r\n  font-size: 30px;\r\n  font-weight: 500;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const Game: React.FC = props => {\r\n  return <Wrapper>{props.children}</Wrapper>\r\n}\r\n\r\nconst Wrapper = styled.main`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin: auto;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const Header: React.FC = props => {\r\n  return (\r\n    <Wrapper>\r\n      <Title>Minesweeper</Title>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.header`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 16px;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-weight: 500;\r\n  font-size: 40px;\r\n  color: #5960e4;\r\n  opacity: 0.72;\r\n`\r\n","import classNames from \"classnames\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Square } from \"../containers\"\r\nimport { gameStore } from \"../stores\"\r\n\r\nexport const Minefield: React.FC = observer(props => {\r\n  const { minefield, gameHasEnded, boardWidth, boardHeight } = gameStore\r\n\r\n  const renderedMinefield = minefield.map((square, id) => (\r\n    <Square key={id} squareModel={square} />\r\n  ))\r\n\r\n  const className = classNames({\r\n    gameHasEnded\r\n  })\r\n\r\n  return (\r\n    <Wrapper\r\n      className={className}\r\n      boardWidth={boardWidth}\r\n      boardHeight={boardHeight}\r\n    >\r\n      {renderedMinefield}\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div<{\r\n  boardWidth: number\r\n  boardHeight: number\r\n}>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${props => props.boardWidth}, 30px);\r\n  grid-template-rows: repeat(${props => props.boardHeight}, 30px);\r\n  grid-gap: 1px;\r\n\r\n  &.gameHasEnded {\r\n    pointer-events: none;\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const ChevronDown: React.FC = props => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 29.829 29.828\">\r\n      <Path d=\"M6,9l8.725,8.725L23.451,9\" />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  opacity: 0.83;\r\n  width: 20px;\r\n`\r\n\r\nconst Path = styled.path`\r\n  fill: none;\r\n  stroke: #5258d4;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const CloseIcon: React.FC = props => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 29.829 29.828\">\r\n      <g id=\"x\" transform=\"translate(-4.586 -4.586)\">\r\n        <Line x1=\"27\" y2=\"27\" transform=\"translate(6 6)\" />\r\n        <Line x2=\"27\" y2=\"27\" transform=\"translate(6 6)\" />\r\n      </g>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  opacity: 0.83;\r\n  height: 27px;\r\n`\r\n\r\nconst Line = styled.line`\r\n  fill: none;\r\n  stroke: #5258d4;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const FlagIcon: React.FC = props => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 22\">\r\n      <g transform=\"translate(-3 -1)\">\r\n        <Flag d=\"M4,15s1-1,4-1,5,2,8,2,4-1,4-1V3s-1,1-4,1S11,2,8,2,4,3,4,3Z\" />\r\n        <Pole y1=\"7\" transform=\"translate(4 15)\" />\r\n      </g>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  width: 16px;\r\n`\r\n\r\nconst Flag = styled.path`\r\n  fill: #5258d4;\r\n  stroke: #1f2356;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n\r\nconst Pole = styled.line`\r\n  fill: none;\r\n  stroke: #1f2356;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const RefreshIcon: React.FC = props => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 29.829 29.828\">\r\n      <g transform=\"translate(0 -1.94)\">\r\n        <Path d=\"M1,4v9.022h9.022\" transform=\"translate(0 0.503)\" />\r\n        <Path d=\"M26.022,23.022V14H17\" transform=\"translate(8.058 5.539)\" />\r\n        <Path d=\"M30.305,12.021A13.532,13.532,0,0,0,7.977,6.968L1,13.524m33.079,6.014L27.1,26.094A13.532,13.532,0,0,1,4.774,21.042\" />\r\n      </g>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  opacity: 0.83;\r\n  height: 27px;\r\n  width: 37px;\r\n  margin-left: -5px;\r\n`\r\n\r\nconst Path = styled.path`\r\n  fill: none;\r\n  stroke: #5258d4;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import classNames from \"classnames\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { FlagIcon } from \"../icons\"\r\nimport { SquareModel } from \"../models\"\r\nimport { gameStore } from \"../stores\"\r\n\r\ninterface SquareProps {\r\n  squareModel: SquareModel\r\n}\r\n\r\nexport const Square: React.FC<SquareProps> = observer(props => {\r\n  const { squareModel } = props\r\n  const { hasLost } = gameStore\r\n  const { isFlagged, isOpened, isExploded, hasBomb } = squareModel\r\n\r\n  const onLeftClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault()\r\n    if (isFlagged) return\r\n\r\n    squareModel.onOpen()\r\n  }\r\n\r\n  const onRightClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault()\r\n    if (!squareModel.isClosed) return\r\n\r\n    squareModel.toggleFlag()\r\n  }\r\n\r\n  let squareContent: React.ReactNode\r\n\r\n  if (isFlagged) squareContent = <FlagIcon />\r\n  if (isOpened && squareModel.neighborsWithBomb > 0)\r\n    squareContent = squareModel.neighborsWithBomb\r\n\r\n  const className = classNames({\r\n    isOpened,\r\n    isExploded: isExploded || (hasBomb && hasLost)\r\n  })\r\n\r\n  return (\r\n    <Wrapper\r\n      className={className}\r\n      onClick={onLeftClick}\r\n      onContextMenu={onRightClick}\r\n    >\r\n      {squareContent}\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.button`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  outline: none !important;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  background-color: rgba(0, 0, 0, 0.36);\r\n\r\n  &.isOpened,\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.16);\r\n  }\r\n\r\n  &.isExploded {\r\n    background-color: #5960e4;\r\n  }\r\n\r\n  color: #5960e4;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  border: none;\r\n  padding: 10px 48px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: rgba(89, 96, 228, 0.73);\r\n  background-color: #0b0c1e;\r\n  outline: none !important;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #0e1028;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #0c0d22;\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport * as AriaMenubutton from \"react-aria-menubutton\"\r\nimport styled from \"styled-components\"\r\nimport { Button } from \"../components\"\r\nimport { ChevronDown } from \"../icons\"\r\nimport { DropdownEntry } from \"../types\"\r\n\r\ninterface DropdownProps {\r\n  entries: DropdownEntry[]\r\n  selectedEntry: DropdownEntry\r\n  onEntryChange: (entry: DropdownEntry) => void\r\n}\r\n\r\nexport const Dropdown: React.FC<DropdownProps> = props => {\r\n  const { entries, selectedEntry, onEntryChange } = props\r\n\r\n  const handleSelection = (value: any) => {\r\n    const newEntry = entries.find(entry => entry.value === value)!\r\n    onEntryChange(newEntry)\r\n  }\r\n\r\n  const menuItems = entries.map(entry => {\r\n    return (\r\n      <MenuItem key={entry.value} value={entry.value}>\r\n        {entry.content}\r\n      </MenuItem>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Wrapper onSelection={handleSelection}>\r\n        <MenuButton tag=\"button\">\r\n          {selectedEntry.content}\r\n          <Icon>\r\n            <ChevronDown />\r\n          </Icon>\r\n        </MenuButton>\r\n        <Menu>{menuItems}</Menu>\r\n      </Wrapper>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled(AriaMenubutton.Wrapper)`\r\n  position: relative;\r\n`\r\n\r\nconst Menu = styled(AriaMenubutton.Menu)`\r\n  position: absolute;\r\n  top: 100%;\r\n  right: 0;\r\n  margin-top: 4px;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.2);\r\n`\r\n\r\nconst MenuItem = styled(AriaMenubutton.MenuItem)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  border: none;\r\n  padding: 10px 16px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: rgba(105, 108, 163, 0.73);\r\n  text-align: right;\r\n  background-color: #0b0c1e;\r\n  outline: none !important;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #0e1028;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #0c0d22;\r\n  }\r\n`\r\n\r\nconst MenuButton = Button.withComponent(AriaMenubutton.Button)\r\n\r\nconst Icon = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 8px;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Label = styled.label`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  color: #5960e4;\r\n  margin-bottom: 4px;\r\n`\r\n","import { BoardInfo } from \"../types\"\r\n\r\nexport const boardInfo: Record<string, BoardInfo> = {\r\n  beginner: { width: 9, height: 9, bombAmount: 10 },\r\n  advanced: { width: 16, height: 16, bombAmount: 40 },\r\n  expert: { width: 30, height: 16, bombAmount: 99 }\r\n}\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Button, Dropdown, Label } from \"../components\"\r\nimport { boardInfo } from \"../constants\"\r\nimport { useDropdown } from \"../hooks\"\r\nimport { gameStore } from \"../stores\"\r\n\r\nexport const StartScreen: React.FC = props => {\r\n  const gameModeDropdown = useDropdown([\r\n    { value: \"beginner\", content: \"Beginner - 9x9\" },\r\n    { value: \"advanced\", content: \"Advanced - 16x16\" },\r\n    { value: \"expert\", content: \"Expert - 30x16\" }\r\n  ])\r\n\r\n  const { selectedEntry } = gameModeDropdown\r\n\r\n  const handleStartGame = () => {\r\n    gameStore.setupGame(boardInfo[selectedEntry.value])\r\n    gameStore.onStartGame()\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Label>Game mode</Label>\r\n      <Dropdown {...gameModeDropdown} />\r\n\r\n      <Hr />\r\n\r\n      <Button onClick={handleStartGame}>Start game</Button>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.main`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  padding: 32px;\r\n  background-color: rgba(0, 0, 0, 0.36);\r\n  min-width: 300px;\r\n`\r\n\r\nconst Hr = styled.hr`\r\n  border-color: rgba(255, 255, 255, 0.01);\r\n  border-width: 1px;\r\n  margin: 32px 0;\r\n`\r\n","import { useState } from \"react\"\r\nimport { DropdownEntry } from \"../types\"\r\n\r\nexport const useDropdown = (entries: DropdownEntry[]) => {\r\n  const [selectedEntry, setSelectedEntry] = useState(entries[0])\r\n\r\n  const onEntryChange = (entry: DropdownEntry) => {\r\n    setSelectedEntry(entry)\r\n  }\r\n\r\n  return { entries, selectedEntry, onEntryChange }\r\n}\r\n","import { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { CloseIcon, RefreshIcon } from \"../icons\"\r\nimport { gameStore } from \"../stores\"\r\n\r\nexport const TopBar: React.FC = observer(props => {\r\n  const { bombAmount, flaggedAmount } = gameStore\r\n\r\n  const bombsLeft = bombAmount - flaggedAmount\r\n\r\n  return (\r\n    <Wrapper>\r\n      <BombsLeft>\r\n        <BombsLeftImportant>{bombsLeft}</BombsLeftImportant>mines left\r\n      </BombsLeft>\r\n      <GameButton onClick={() => gameStore.onStartGame()}>\r\n        <RefreshIcon />\r\n      </GameButton>\r\n      <GameButton onClick={() => gameStore.onStopGame()}>\r\n        <CloseIcon />\r\n      </GameButton>\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst BombsLeft = styled.p`\r\n  color: #5960e4;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n  opacity: 0.75;\r\n  line-height: 0.75;\r\n\r\n  margin-right: auto;\r\n`\r\n\r\nconst BombsLeftImportant = styled.span`\r\n  font-weight: 400;\r\n  font-size: 40px;\r\n  margin-right: 2px;\r\n`\r\n\r\nconst GameButton = styled.button`\r\n  all: unset;\r\n  line-height: 0;\r\n  cursor: pointer;\r\n\r\n  &:hover * {\r\n    opacity: 1;\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n","import { configure } from \"mobx\"\r\nimport * as React from \"react\"\r\nimport * as ReactDOM from \"react-dom\"\r\nimport { App } from \"./containers\"\r\n\r\nconfigure({ enforceActions: \"always\" })\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}