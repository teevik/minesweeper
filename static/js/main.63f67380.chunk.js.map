{"version":3,"sources":["models/SquareModel.ts","stores/gameStore.ts","containers/App.tsx","containers/BottomBar.tsx","containers/Game.tsx","containers/Header.tsx","components/Button.tsx","icons/ChevronDown.tsx","icons/CloseIcon.tsx","icons/FlagIcon.tsx","icons/RefreshIcon.tsx","components/Dropdown.tsx","components/Label.tsx","components/Square.tsx","containers/Minefield.tsx","constants/gameDimensions.ts","containers/StartScreen.tsx","hooks/useDropdown.ts","containers/TopBar.tsx","index.tsx"],"names":["SquareModel","_class","hasBomb","Object","classCallCheck","this","initializerDefineProperty","_descriptor","_descriptor2","createClass","key","value","neighbors","state","willExplode","neighborsWithBomb","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","neighbor","onOpen","err","return","isFlagged","get","filter","length","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","computed","gameStore","width","height","dimensions","minefield","i","row","push","j","square","Math","random","k","l","neighborSquare","setNeighbors","flat","every","isOpened","some","isExploded","hasWon","hasLost","App","observer","props","react","Wrapper","Header_Header","hasStopped","StartScreen_StartScreen","Game_Game","TopBar","Minefield","BottomBar","GlobalStyle","styled","div","_templateObject","createGlobalStyle","_templateObject2","resultContent","BottomBar_Wrapper","Result","BottomBar_templateObject","p","BottomBar_templateObject2","Game","Game_Wrapper","children","main","Game_templateObject","Header","Header_Wrapper","Title","header","Header_templateObject","h1","Header_templateObject2","Button","button","Button_templateObject","ChevronDown","ChevronDown_Wrapper","xmlns","viewBox","Path","d","svg","ChevronDown_templateObject","path","ChevronDown_templateObject2","CloseIcon","CloseIcon_Wrapper","id","transform","Line","x1","y2","x2","CloseIcon_templateObject","line","CloseIcon_templateObject2","FlagIcon","FlagIcon_Wrapper","Flag","Pole","y1","FlagIcon_templateObject","FlagIcon_templateObject2","_templateObject3","RefreshIcon","RefreshIcon_Wrapper","RefreshIcon_Path","RefreshIcon_templateObject","RefreshIcon_templateObject2","Dropdown","entries","selectedEntry","onEntryChange","menuItems","map","entry","MenuItem","content","Dropdown_Wrapper","onSelection","newEntry","find","MenuButton","tag","Icon","ChevronDown_ChevronDown","Menu","AriaMenubutton","Dropdown_templateObject","Dropdown_templateObject2","Dropdown_templateObject3","withComponent","_templateObject4","Label","label","Label_templateObject","Square","squareContent","squareModel","FlagIcon_FlagIcon","className","classNames","Square_Wrapper","onClick","event","preventDefault","onContextMenu","isClosed","toggleFlag","Square_templateObject","gameHasEnded","renderedMinefield","Minefield_Wrapper","Minefield_templateObject","gameDimensions","beginner","advanced","expert","StartScreen","gameModeDropdown","_useState","useState","_useState2","slicedToArray","setSelectedEntry","useDropdown","StartScreen_Wrapper","Dropdown_Dropdown","Hr","setDimensions","onStartGame","StartScreen_templateObject","hr","StartScreen_templateObject2","bombsLeft","bombAmount","flaggedAmount","TopBar_Wrapper","BombsLeft","BombsLeftImportant","GameButton","RefreshIcon_RefreshIcon","onStopGame","CloseIcon_CloseIcon","TopBar_templateObject","TopBar_templateObject2","span","TopBar_templateObject3","TopBar_templateObject4","configure","enforceActions","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.63f67380.chunk.js","sourcesContent":["import { action, computed, observable } from \"mobx\"\r\n\r\nexport type SquareState = \"opened\" | \"closed\" | \"exploded\"\r\n\r\nexport class SquareModel {\r\n  public readonly hasBomb: boolean\r\n  @observable public isFlagged = false\r\n  @observable private state: SquareState = \"closed\"\r\n\r\n  private neighbors!: SquareModel[]\r\n\r\n  constructor(hasBomb: boolean) {\r\n    this.hasBomb = hasBomb\r\n  }\r\n\r\n  public setNeighbors(neighbors: SquareModel[]) {\r\n    this.neighbors = neighbors\r\n  }\r\n\r\n  @action\r\n  public onOpen() {\r\n    if (this.state === \"opened\") return\r\n\r\n    const willExplode = this.hasBomb\r\n    this.state = willExplode ? \"exploded\" : \"opened\"\r\n\r\n    if (!willExplode && this.neighborsWithBomb === 0) {\r\n      for (const neighbor of this.neighbors) {\r\n        if (neighbor.state === \"closed\") neighbor.onOpen()\r\n      }\r\n    }\r\n  }\r\n\r\n  @action\r\n  public toggleFlag() {\r\n    this.isFlagged = !this.isFlagged\r\n  }\r\n\r\n  @computed\r\n  public get neighborsWithBomb() {\r\n    const neighbors = this.neighbors.filter(neighbor => neighbor.hasBomb)\r\n\r\n    return neighbors.length\r\n  }\r\n\r\n  @computed\r\n  public get isClosed() {\r\n    return this.state === \"closed\"\r\n  }\r\n\r\n  @computed\r\n  public get isOpened() {\r\n    return this.state === \"opened\"\r\n  }\r\n\r\n  @computed\r\n  public get isExploded() {\r\n    return this.state === \"exploded\"\r\n  }\r\n}\r\n","import { action, computed, observable } from \"mobx\"\r\nimport { SquareModel } from \"../models\"\r\nimport { Dimensions } from \"../types\"\r\n\r\nexport type GameState = \"stopped\" | \"started\"\r\n\r\nclass GameStore {\r\n  @observable\r\n  private state: GameState = \"stopped\"\r\n\r\n  @observable\r\n  public minefield: SquareModel[] = []\r\n\r\n  public width = 0\r\n  public height = 0\r\n\r\n  public setDimensions(dimensions: Dimensions) {\r\n    this.width = dimensions.width\r\n    this.height = dimensions.height\r\n  }\r\n\r\n  @action\r\n  public onStartGame() {\r\n    const minefield: SquareModel[][] = []\r\n\r\n    for (let i = 0; i < this.height; i++) {\r\n      const row: SquareModel[] = []\r\n      minefield.push(row)\r\n\r\n      for (let j = 0; j < this.width; j++) {\r\n        const square = new SquareModel(Math.random() >= 0.9)\r\n        row.push(square)\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.height; i++) {\r\n      const row = minefield[i]\r\n      for (let j = 0; j < this.width; j++) {\r\n        const square = row[j]\r\n\r\n        const neighbors: SquareModel[] = []\r\n\r\n        for (let k = -1; k < 2; k++) {\r\n          const row = minefield[i + k]\r\n          if (!row) continue\r\n\r\n          for (let l = -1; l < 2; l++) {\r\n            const neighborSquare = row[j + l]\r\n            if (neighborSquare === square) continue\r\n            if (neighborSquare) neighbors.push(neighborSquare)\r\n          }\r\n        }\r\n\r\n        square.setNeighbors(neighbors)\r\n      }\r\n    }\r\n\r\n    this.minefield = minefield.flat()\r\n    this.state = \"started\"\r\n  }\r\n\r\n  @action\r\n  public onStopGame() {\r\n    this.state = \"stopped\"\r\n  }\r\n\r\n  @computed\r\n  public get hasStarted() {\r\n    return this.state === \"started\"\r\n  }\r\n\r\n  @computed\r\n  public get hasStopped() {\r\n    return this.state === \"stopped\"\r\n  }\r\n\r\n  @computed\r\n  public get hasWon() {\r\n    return this.minefield.every(square =>\r\n      square.hasBomb ? square.isFlagged : square.isOpened\r\n    )\r\n  }\r\n\r\n  @computed\r\n  public get hasLost() {\r\n    return this.minefield.some(square => square.isExploded)\r\n  }\r\n\r\n  @computed\r\n  public get gameHasEnded() {\r\n    return this.hasWon || this.hasLost\r\n  }\r\n\r\n  @computed\r\n  public get bombAmount() {\r\n    return this.minefield.filter(square => square.hasBomb).length\r\n  }\r\n\r\n  @computed\r\n  public get flaggedAmount() {\r\n    return this.minefield.filter(square => square.isFlagged).length\r\n  }\r\n}\r\n\r\nexport const gameStore = new GameStore()\r\n","import { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport styled, { createGlobalStyle } from \"styled-components\"\r\nimport { BottomBar, Game, Header, Minefield, StartScreen, TopBar } from \".\"\r\nimport { gameStore } from \"../stores\"\r\n\r\nconst renderStartScreen = () => <StartScreen />\r\n\r\nconst renderGame = () => (\r\n  <Game>\r\n    <TopBar />\r\n    <Minefield />\r\n    <BottomBar />\r\n  </Game>\r\n)\r\n\r\nexport const App: React.FC = observer(props => {\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Header />\r\n        {gameStore.hasStopped ? renderStartScreen() : renderGame()}\r\n      </Wrapper>\r\n      <GlobalStyle />\r\n    </>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  padding-bottom: 32px;\r\n`\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: inherit;\r\n  }\r\n  \r\n  body {\r\n    background-color: #0B0C20;\r\n    font-family: Montserrat, sans-serif;\r\n  }\r\n`\r\n","import { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { gameStore } from \"../stores\"\r\n\r\nexport const BottomBar: React.FC = observer(props => {\r\n  const { hasWon, hasLost } = gameStore\r\n\r\n  let resultContent: React.ReactNode\r\n\r\n  if (hasWon) resultContent = \"You won!\"\r\n  if (hasLost) resultContent = \"You lost!\"\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Result>{resultContent}</Result>\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 8px 0;\r\n`\r\n\r\nconst Result = styled.p`\r\n  color: #5960e4;\r\n  font-size: 30px;\r\n  font-weight: 500;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const Game: React.FC = props => {\r\n  return <Wrapper>{props.children}</Wrapper>\r\n}\r\n\r\nconst Wrapper = styled.main`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin: auto;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const Header: React.FC = props => {\r\n  return (\r\n    <Wrapper>\r\n      <Title>Minesweeper</Title>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.header`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 16px;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-weight: 500;\r\n  font-size: 40px;\r\n  color: #5960e4;\r\n  opacity: 0.72;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  border: none;\r\n  padding: 10px 48px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: rgba(89, 96, 228, 0.73);\r\n  background-color: #0b0c1e;\r\n  outline: none !important;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #0e1028;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #0c0d22;\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const ChevronDown: React.FC = props => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 29.829 29.828\">\r\n      <Path d=\"M6,9l8.725,8.725L23.451,9\" />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  opacity: 0.83;\r\n  width: 20px;\r\n`\r\n\r\nconst Path = styled.path`\r\n  fill: none;\r\n  stroke: #5258d4;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const CloseIcon: React.FC = props => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 29.829 29.828\">\r\n      <g id=\"x\" transform=\"translate(-4.586 -4.586)\">\r\n        <Line x1=\"27\" y2=\"27\" transform=\"translate(6 6)\" />\r\n        <Line x2=\"27\" y2=\"27\" transform=\"translate(6 6)\" />\r\n      </g>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  opacity: 0.83;\r\n  height: 27px;\r\n`\r\n\r\nconst Line = styled.line`\r\n  fill: none;\r\n  stroke: #5258d4;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const FlagIcon: React.FC = props => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18 22\">\r\n      <g transform=\"translate(-3 -1)\">\r\n        <Flag d=\"M4,15s1-1,4-1,5,2,8,2,4-1,4-1V3s-1,1-4,1S11,2,8,2,4,3,4,3Z\" />\r\n        <Pole y1=\"7\" transform=\"translate(4 15)\" />\r\n      </g>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  width: 16px;\r\n`\r\n\r\nconst Flag = styled.path`\r\n  fill: #5258d4;\r\n  stroke: #1f2356;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n\r\nconst Pole = styled.line`\r\n  fill: none;\r\n  stroke: #1f2356;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const RefreshIcon: React.FC = props => {\r\n  return (\r\n    <Wrapper xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 29.829 29.828\">\r\n      <g transform=\"translate(0 -1.94)\">\r\n        <Path d=\"M1,4v9.022h9.022\" transform=\"translate(0 0.503)\" />\r\n        <Path d=\"M26.022,23.022V14H17\" transform=\"translate(8.058 5.539)\" />\r\n        <Path d=\"M30.305,12.021A13.532,13.532,0,0,0,7.977,6.968L1,13.524m33.079,6.014L27.1,26.094A13.532,13.532,0,0,1,4.774,21.042\" />\r\n      </g>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.svg`\r\n  opacity: 0.83;\r\n  height: 27px;\r\n  width: 37px;\r\n  margin-left: -5px;\r\n`\r\n\r\nconst Path = styled.path`\r\n  fill: none;\r\n  stroke: #5258d4;\r\n  stroke-linecap: round;\r\n  stroke-linejoin: round;\r\n  stroke-width: 2px;\r\n`\r\n","import * as React from \"react\"\r\nimport * as AriaMenubutton from \"react-aria-menubutton\"\r\nimport styled from \"styled-components\"\r\nimport { Button } from \"../components\"\r\nimport { ChevronDown } from \"../icons\"\r\nimport { DropdownEntry } from \"../types\"\r\n\r\ninterface DropdownProps {\r\n  entries: DropdownEntry[]\r\n  selectedEntry: DropdownEntry\r\n  onEntryChange: (entry: DropdownEntry) => void\r\n}\r\n\r\nexport const Dropdown: React.FC<DropdownProps> = props => {\r\n  const { entries, selectedEntry, onEntryChange } = props\r\n\r\n  const handleSelection = (value: any) => {\r\n    const newEntry = entries.find(entry => entry.value === value)!\r\n    onEntryChange(newEntry)\r\n  }\r\n\r\n  const menuItems = entries.map(entry => {\r\n    return (\r\n      <MenuItem key={entry.value} value={entry.value}>\r\n        {entry.content}\r\n      </MenuItem>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Wrapper onSelection={handleSelection}>\r\n        <MenuButton tag=\"button\">\r\n          {selectedEntry.content}\r\n          <Icon>\r\n            <ChevronDown />\r\n          </Icon>\r\n        </MenuButton>\r\n        <Menu>{menuItems}</Menu>\r\n      </Wrapper>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled(AriaMenubutton.Wrapper)`\r\n  position: relative;\r\n`\r\n\r\nconst Menu = styled(AriaMenubutton.Menu)`\r\n  position: absolute;\r\n  top: 100%;\r\n  right: 0;\r\n  margin-top: 4px;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.2);\r\n`\r\n\r\nconst MenuItem = styled(AriaMenubutton.MenuItem)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  border: none;\r\n  padding: 10px 16px;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: rgba(105, 108, 163, 0.73);\r\n  text-align: right;\r\n  background-color: #0b0c1e;\r\n  outline: none !important;\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #0e1028;\r\n  }\r\n\r\n  &:active {\r\n    background-color: #0c0d22;\r\n  }\r\n`\r\n\r\nconst MenuButton = Button.withComponent(AriaMenubutton.Button)\r\n\r\nconst Icon = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-left: 8px;\r\n`\r\n","import styled from \"styled-components\"\r\n\r\nexport const Label = styled.label`\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n  color: #5960e4;\r\n  margin-bottom: 4px;\r\n`\r\n","import classNames from \"classnames\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { FlagIcon } from \"../icons\"\r\nimport { SquareModel } from \"../models\"\r\nimport { gameStore } from \"../stores\"\r\n\r\ninterface SquareProps {\r\n  squareModel: SquareModel\r\n}\r\n\r\nexport const Square: React.FC<SquareProps> = observer(props => {\r\n  const { squareModel } = props\r\n  const { hasLost } = gameStore\r\n  const { isFlagged, isOpened, isExploded, hasBomb } = squareModel\r\n\r\n  const onLeftClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault()\r\n    if (isFlagged) return\r\n\r\n    squareModel.onOpen()\r\n  }\r\n\r\n  const onRightClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault()\r\n    if (!squareModel.isClosed) return\r\n\r\n    squareModel.toggleFlag()\r\n  }\r\n\r\n  let squareContent: React.ReactNode\r\n\r\n  if (isFlagged) squareContent = <FlagIcon />\r\n  if (isOpened && squareModel.neighborsWithBomb > 0)\r\n    squareContent = squareModel.neighborsWithBomb\r\n\r\n  const className = classNames({\r\n    isOpened,\r\n    isExploded: isExploded || (hasBomb && hasLost)\r\n  })\r\n\r\n  return (\r\n    <Wrapper\r\n      className={className}\r\n      onClick={onLeftClick}\r\n      onContextMenu={onRightClick}\r\n    >\r\n      {squareContent}\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.button`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  outline: none !important;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  background-color: rgba(0, 0, 0, 0.36);\r\n\r\n  &.isOpened,\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.16);\r\n  }\r\n\r\n  &.isExploded {\r\n    background-color: #5960e4;\r\n  }\r\n\r\n  color: #5960e4;\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n`\r\n","import classNames from \"classnames\"\r\nimport { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Square } from \"../components\"\r\nimport { gameStore } from \"../stores\"\r\n\r\nexport const Minefield: React.FC = observer(props => {\r\n  const { minefield, gameHasEnded, width, height } = gameStore\r\n\r\n  const renderedMinefield = minefield.map((square, id) => (\r\n    <Square key={id} squareModel={square} />\r\n  ))\r\n\r\n  const className = classNames({\r\n    gameHasEnded\r\n  })\r\n\r\n  return (\r\n    <Wrapper className={className} width={width} height={height}>\r\n      {renderedMinefield}\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div<{\r\n  width: number\r\n  height: number\r\n}>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${props => props.width}, 30px);\r\n  grid-template-rows: repeat(${props => props.height}, 30px);\r\n  grid-gap: 1px;\r\n\r\n  &.gameHasEnded {\r\n    pointer-events: none;\r\n  }\r\n`\r\n","import { Dimensions } from \"../types\"\r\n\r\nexport const gameDimensions: Record<string, Dimensions> = {\r\n  beginner: { width: 9, height: 9 },\r\n  advanced: { width: 16, height: 16 },\r\n  expert: { width: 30, height: 16 }\r\n}\r\n","import * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Button, Dropdown, Label } from \"../components\"\r\nimport { gameDimensions } from \"../constants\"\r\nimport { useDropdown } from \"../hooks\"\r\nimport { gameStore } from \"../stores\"\r\nimport { Dimensions } from \"../types\"\r\n\r\nexport const StartScreen: React.FC = props => {\r\n  const gameModeDropdown = useDropdown([\r\n    { value: \"beginner\", content: \"Beginner - 9x9\" },\r\n    { value: \"advanced\", content: \"Advanced - 16x16\" },\r\n    { value: \"expert\", content: \"Expert - 16x30\" }\r\n  ])\r\n\r\n  const { selectedEntry } = gameModeDropdown\r\n\r\n  const handleStartGame = () => {\r\n    gameStore.setDimensions(gameDimensions[selectedEntry.value])\r\n    gameStore.onStartGame()\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Label>Game mode</Label>\r\n      <Dropdown {...gameModeDropdown} />\r\n\r\n      <Hr />\r\n\r\n      <Button onClick={handleStartGame}>Start game</Button>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled.main`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  padding: 32px;\r\n  background-color: rgba(0, 0, 0, 0.36);\r\n  min-width: 300px;\r\n`\r\n\r\nconst Hr = styled.hr`\r\n  border-color: rgba(255, 255, 255, 0.01);\r\n  border-width: 1px;\r\n  margin: 32px 0;\r\n`\r\n","import { useState } from \"react\"\r\nimport { DropdownEntry } from \"../types\"\r\n\r\nexport const useDropdown = (entries: DropdownEntry[]) => {\r\n  const [selectedEntry, setSelectedEntry] = useState(entries[0])\r\n\r\n  const onEntryChange = (entry: DropdownEntry) => {\r\n    setSelectedEntry(entry)\r\n  }\r\n\r\n  return { entries, selectedEntry, onEntryChange }\r\n}\r\n","import { observer } from \"mobx-react-lite\"\r\nimport * as React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { CloseIcon, RefreshIcon } from \"../icons\"\r\nimport { gameStore } from \"../stores\"\r\n\r\nexport const TopBar: React.FC = observer(props => {\r\n  const { bombAmount, flaggedAmount } = gameStore\r\n\r\n  const bombsLeft = bombAmount - flaggedAmount\r\n\r\n  return (\r\n    <Wrapper>\r\n      <BombsLeft>\r\n        <BombsLeftImportant>{bombsLeft}</BombsLeftImportant>mines left\r\n      </BombsLeft>\r\n      <GameButton onClick={() => gameStore.onStartGame()}>\r\n        <RefreshIcon />\r\n      </GameButton>\r\n      <GameButton onClick={() => gameStore.onStopGame()}>\r\n        <CloseIcon />\r\n      </GameButton>\r\n    </Wrapper>\r\n  )\r\n})\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst BombsLeft = styled.p`\r\n  color: #5960e4;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n  opacity: 0.75;\r\n  line-height: 0.75;\r\n\r\n  margin-right: auto;\r\n`\r\n\r\nconst BombsLeftImportant = styled.span`\r\n  font-weight: 400;\r\n  font-size: 40px;\r\n  margin-right: 2px;\r\n`\r\n\r\nconst GameButton = styled.button`\r\n  all: unset;\r\n  line-height: 0;\r\n  cursor: pointer;\r\n\r\n  &:hover * {\r\n    opacity: 1;\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n","import { configure } from \"mobx\"\r\nimport * as React from \"react\"\r\nimport * as ReactDOM from \"react-dom\"\r\nimport { App } from \"./containers\"\r\n\r\nconfigure({ enforceActions: \"always\" })\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}